{"ast":null,"code":"/* eslint-disable no-undef */\n'use strict';\n\nvar _defineProperty = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _regeneratorRuntime = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _wrapAsyncGenerator = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('./http/fetch'),\n  _fetch = _require.fetch,\n  Request = _require.Request,\n  Headers = _require.Headers;\nvar _require2 = require('./http/error'),\n  TimeoutError = _require2.TimeoutError,\n  HTTPError = _require2.HTTPError;\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\nvar _require3 = require('iso-url'),\n  URL = _require3.URL,\n  URLSearchParams = _require3.URLSearchParams;\nvar anySignal = require('any-signal');\nvar browserReableStreamToIt = require('browser-readablestream-to-it');\nvar _require4 = require('./env'),\n  isBrowser = _require4.isBrowser,\n  isWebWorker = _require4.isWebWorker;\nvar all = require('it-all');\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nvar timeout = function timeout(promise, ms, abortController) {\n  if (ms === undefined) {\n    return promise;\n  }\n  var start = Date.now();\n  var timedOut = function timedOut() {\n    var time = Date.now() - start;\n    return time >= ms;\n  };\n  return new Promise(function (resolve, reject) {\n    var timeoutID = setTimeout(function () {\n      if (timedOut()) {\n        reject(new TimeoutError());\n        abortController.abort();\n      }\n    }, ms);\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    var after = function after(next) {\n      /**\n       * @param {any} res\n       */\n      var fn = function fn(res) {\n        clearTimeout(timeoutID);\n        if (timedOut()) {\n          reject(new TimeoutError());\n          return;\n        }\n        next(res);\n      };\n      return fn;\n    };\n    promise.then(after(resolve), after(reject));\n  });\n};\nvar defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n};\nvar HTTP = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  function HTTP() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, HTTP);\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options);\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  _createClass(HTTP, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(resource) {\n        var options,\n          opts,\n          headers,\n          url,\n          searchParams,\n          transformSearchParams,\n          json,\n          abortController,\n          signal,\n          response,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              /** @type {HTTPOptions} */\n              opts = merge(this.opts, options); // @ts-expect-error\n              headers = new Headers(opts.headers); // validate resource type\n              // @ts-expect-error\n              if (!(typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request))) {\n                _context3.next = 5;\n                break;\n              }\n              throw new TypeError('`resource` must be a string, URL, or Request');\n            case 5:\n              url = new URL(resource.toString(), opts.base);\n              searchParams = opts.searchParams, transformSearchParams = opts.transformSearchParams, json = opts.json;\n              if (searchParams) {\n                if (typeof transformSearchParams === 'function') {\n                  // @ts-ignore\n                  url.search = transformSearchParams(new URLSearchParams(opts.searchParams));\n                } else {\n                  // @ts-ignore\n                  url.search = new URLSearchParams(opts.searchParams);\n                }\n              }\n              if (json) {\n                opts.body = JSON.stringify(opts.json);\n                headers.set('content-type', 'application/json');\n              }\n              abortController = new AbortController(); // @ts-ignore\n              signal = anySignal([abortController.signal, opts.signal]);\n              if (!(globalThis.ReadableStream != null && opts.body instanceof globalThis.ReadableStream && (isBrowser || isWebWorker))) {\n                _context3.next = 17;\n                break;\n              }\n              _context3.t0 = Blob;\n              _context3.next = 15;\n              return all(browserReableStreamToIt(opts.body));\n            case 15:\n              _context3.t1 = _context3.sent;\n              opts.body = new _context3.t0(_context3.t1);\n            case 17:\n              _context3.next = 19;\n              return timeout(_fetch(url.toString(), _objectSpread(_objectSpread({}, opts), {}, {\n                signal: signal,\n                // @ts-expect-error non-browser fetch implementations may take extra options\n                timeout: undefined,\n                headers: headers,\n                // https://fetch.spec.whatwg.org/#dom-requestinit-duplex\n                // https://github.com/whatwg/fetch/issues/1254\n                duplex: 'half'\n              })), opts.timeout, abortController);\n            case 19:\n              response = _context3.sent;\n              if (!(!response.ok && opts.throwHttpErrors)) {\n                _context3.next = 25;\n                break;\n              }\n              if (!opts.handleError) {\n                _context3.next = 24;\n                break;\n              }\n              _context3.next = 24;\n              return opts.handleError(response);\n            case 24:\n              throw new HTTPError(response);\n            case 25:\n              response.iterator = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(fromStream(response.body)), _awaitAsyncGenerator), \"t0\", 1);\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              response.ndjson = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _iteratorAbruptCompletion = false;\n                      _didIteratorError = false;\n                      _context2.prev = 2;\n                      _iterator = _asyncIterator(ndjson(response.iterator()));\n                    case 4:\n                      _context2.next = 6;\n                      return _awaitAsyncGenerator(_iterator.next());\n                    case 6:\n                      if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                        _context2.next = 18;\n                        break;\n                      }\n                      chunk = _step.value;\n                      if (!options.transform) {\n                        _context2.next = 13;\n                        break;\n                      }\n                      _context2.next = 11;\n                      return options.transform(chunk);\n                    case 11:\n                      _context2.next = 15;\n                      break;\n                    case 13:\n                      _context2.next = 15;\n                      return chunk;\n                    case 15:\n                      _iteratorAbruptCompletion = false;\n                      _context2.next = 4;\n                      break;\n                    case 18:\n                      _context2.next = 24;\n                      break;\n                    case 20:\n                      _context2.prev = 20;\n                      _context2.t0 = _context2[\"catch\"](2);\n                      _didIteratorError = true;\n                      _iteratorError = _context2.t0;\n                    case 24:\n                      _context2.prev = 24;\n                      _context2.prev = 25;\n                      if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                        _context2.next = 29;\n                        break;\n                      }\n                      _context2.next = 29;\n                      return _awaitAsyncGenerator(_iterator.return());\n                    case 29:\n                      _context2.prev = 29;\n                      if (!_didIteratorError) {\n                        _context2.next = 32;\n                        break;\n                      }\n                      throw _iteratorError;\n                    case 32:\n                      return _context2.finish(29);\n                    case 33:\n                      return _context2.finish(24);\n                    case 34:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n              }));\n              return _context3.abrupt(\"return\", response);\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function fetch(_x2) {\n        return _fetch2.apply(this, arguments);\n      }\n      return fetch;\n    }()\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"post\",\n    value: function post(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'POST'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"get\",\n    value: function get(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'GET'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"put\",\n    value: function put(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PUT'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'DELETE'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"options\",\n    value: function options(resource) {\n      var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, _options), {}, {\n        method: 'OPTIONS'\n      }));\n    }\n  }]);\n  return HTTP;\n}();\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nvar ndjson = /*#__PURE__*/function () {\n  var _ref3 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(source) {\n    var decoder, buf, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, lines, i, l;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          decoder = new TextDecoder();\n          buf = '';\n          _iteratorAbruptCompletion2 = false;\n          _didIteratorError2 = false;\n          _context4.prev = 4;\n          _iterator2 = _asyncIterator(source);\n        case 6:\n          _context4.next = 8;\n          return _awaitAsyncGenerator(_iterator2.next());\n        case 8:\n          if (!(_iteratorAbruptCompletion2 = !(_step2 = _context4.sent).done)) {\n            _context4.next = 25;\n            break;\n          }\n          chunk = _step2.value;\n          buf += decoder.decode(chunk, {\n            stream: true\n          });\n          lines = buf.split(/\\r?\\n/);\n          i = 0;\n        case 13:\n          if (!(i < lines.length - 1)) {\n            _context4.next = 21;\n            break;\n          }\n          l = lines[i].trim();\n          if (!(l.length > 0)) {\n            _context4.next = 18;\n            break;\n          }\n          _context4.next = 18;\n          return JSON.parse(l);\n        case 18:\n          i++;\n          _context4.next = 13;\n          break;\n        case 21:\n          buf = lines[lines.length - 1];\n        case 22:\n          _iteratorAbruptCompletion2 = false;\n          _context4.next = 6;\n          break;\n        case 25:\n          _context4.next = 31;\n          break;\n        case 27:\n          _context4.prev = 27;\n          _context4.t0 = _context4[\"catch\"](4);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context4.t0;\n        case 31:\n          _context4.prev = 31;\n          _context4.prev = 32;\n          if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n            _context4.next = 36;\n            break;\n          }\n          _context4.next = 36;\n          return _awaitAsyncGenerator(_iterator2.return());\n        case 36:\n          _context4.prev = 36;\n          if (!_didIteratorError2) {\n            _context4.next = 39;\n            break;\n          }\n          throw _iteratorError2;\n        case 39:\n          return _context4.finish(36);\n        case 40:\n          return _context4.finish(31);\n        case 41:\n          buf += decoder.decode();\n          buf = buf.trim();\n          if (!(buf.length !== 0)) {\n            _context4.next = 46;\n            break;\n          }\n          _context4.next = 46;\n          return JSON.parse(buf);\n        case 46:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[4, 27, 31, 41], [32,, 36, 40]]);\n  }));\n  return function ndjson(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nvar fromStream = function fromStream(source) {\n  if (isAsyncIterable(source)) {\n    return source;\n  }\n\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    var iter = source[Symbol.asyncIterator]();\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      return {\n        next: iter.next.bind(iter),\n        return: function _return(value) {\n          source.destroy();\n          if (typeof iter.return === 'function') {\n            return iter.return();\n          }\n          return Promise.resolve({\n            done: true,\n            value: value\n          });\n        }\n      };\n    });\n  }\n  if (isWebReadableStream(source)) {\n    var reader = source.getReader();\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _yield$_awaitAsyncGen, done, value;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n          case 1:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n            _context5.next = 4;\n            return _awaitAsyncGenerator(reader.read());\n          case 4:\n            _yield$_awaitAsyncGen = _context5.sent;\n            done = _yield$_awaitAsyncGen.done;\n            value = _yield$_awaitAsyncGen.value;\n            if (!done) {\n              _context5.next = 9;\n              break;\n            }\n            return _context5.abrupt(\"return\");\n          case 9:\n            if (!value) {\n              _context5.next = 12;\n              break;\n            }\n            _context5.next = 12;\n            return value;\n          case 12:\n            _context5.next = 1;\n            break;\n          case 14:\n            _context5.prev = 14;\n            reader.releaseLock();\n            return _context5.finish(14);\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0,, 14, 17]]);\n    }))();\n  }\n  throw new TypeError('Body can\\'t be converted to AsyncIterable');\n};\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nvar isAsyncIterable = function isAsyncIterable(value) {\n  return typeof value === 'object' && value !== null && typeof /** @type {any} */value[Symbol.asyncIterator] === 'function';\n};\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nvar isWebReadableStream = function isWebReadableStream(value) {\n  return value && typeof /** @type {any} */value.getReader === 'function';\n};\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nvar isNodeReadableStream = function isNodeReadableStream(value) {\n  return Object.prototype.hasOwnProperty.call(value, 'readable') && Object.prototype.hasOwnProperty.call(value, 'writable');\n};\nHTTP.HTTPError = HTTPError;\nHTTP.TimeoutError = TimeoutError;\nHTTP.streamToAsyncIterator = fromStream;\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = function (resource, options) {\n  return new HTTP(options).post(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = function (resource, options) {\n  return new HTTP(options).get(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = function (resource, options) {\n  return new HTTP(options).put(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = function (resource, options) {\n  return new HTTP(options).delete(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = function (resource, options) {\n  return new HTTP(options).options(resource, options);\n};\nmodule.exports = HTTP;","map":{"version":3,"names":["_defineProperty","require","default","_regeneratorRuntime","_objectSpread","_asyncToGenerator","_classCallCheck","_createClass","_wrapAsyncGenerator","_awaitAsyncGenerator","_asyncGeneratorDelegate","_asyncIterator","_require","fetch","Request","Headers","_require2","TimeoutError","HTTPError","merge","bind","ignoreUndefined","_require3","URL","URLSearchParams","anySignal","browserReableStreamToIt","_require4","isBrowser","isWebWorker","all","timeout","promise","ms","abortController","undefined","start","Date","now","timedOut","time","Promise","resolve","reject","timeoutID","setTimeout","abort","after","next","fn","res","clearTimeout","then","defaults","throwHttpErrors","credentials","HTTP","options","arguments","length","opts","key","value","_fetch2","mark","_callee3","resource","headers","url","searchParams","transformSearchParams","json","signal","response","_args3","wrap","_callee3$","_context3","prev","TypeError","toString","base","search","body","JSON","stringify","set","AbortController","globalThis","ReadableStream","t0","Blob","t1","sent","duplex","ok","handleError","iterator","_callee","_callee$","_context","delegateYield","fromStream","stop","ndjson","_callee2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","_callee2$","_context2","done","transform","return","finish","abrupt","_x2","apply","post","method","get","put","_delete","_ref3","_callee4","source","decoder","buf","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","lines","i","l","_callee4$","_context4","TextDecoder","decode","stream","split","trim","parse","_x","isAsyncIterable","isNodeReadableStream","iter","Symbol","asyncIterator","_return","destroy","isWebReadableStream","reader","getReader","_callee5","_yield$_awaitAsyncGen","_callee5$","_context5","read","releaseLock","Object","prototype","hasOwnProperty","call","streamToAsyncIterator","delete","module","exports"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-utils/src/http.js"],"sourcesContent":["/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\nconst browserReableStreamToIt = require('browser-readablestream-to-it')\nconst { isBrowser, isWebWorker } = require('./env')\nconst all = require('it-all')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    if (globalThis.ReadableStream != null && opts.body instanceof globalThis.ReadableStream && (isBrowser || isWebWorker)) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n      opts.body = new Blob(await all(browserReableStreamToIt(opts.body)))\n    }\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers,\n\n          // https://fetch.spec.whatwg.org/#dom-requestinit-duplex\n          // https://github.com/whatwg/fetch/issues/1254\n          duplex: 'half'\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}