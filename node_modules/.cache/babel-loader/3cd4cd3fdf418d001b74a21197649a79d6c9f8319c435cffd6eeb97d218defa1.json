{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from './lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd(options) {\n  var all = createAddAll(options);\n  return configure(function () {\n    function add(_x) {\n      return _add.apply(this, arguments);\n    }\n    function _add() {\n      _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n        var options,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return last(all(normaliseInput(input), options));\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _add.apply(this, arguments);\n    }\n    return add;\n  })(options);\n}","map":{"version":3,"names":["createAddAll","last","configure","normaliseInput","createAdd","options","all","add","_x","_add","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","input","_args","wrap","_callee$","_context","prev","next","length","undefined","abrupt","sent","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/add.js"],"sourcesContent":["import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from './lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd(options) {\n  const all = createAddAll(options);\n  return configure(() => {\n    async function add(input, options = {}) {\n      return await last(all(normaliseInput(input), options));\n    }\n    return add;\n  })(options);\n}"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,cAAc;AAC3C,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,cAAc,QAAQ,8CAA8C;AAC7E,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EACjC,IAAMC,GAAG,GAAGN,YAAY,CAACK,OAAO,CAAC;EACjC,OAAOH,SAAS,CAAC,YAAM;IAAA,SACNK,GAAGA,CAAAC,EAAA;MAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,KAAA;MAAAA,IAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAlB,SAAAC,QAAmBC,KAAK;QAAA,IAAAX,OAAA;UAAAY,KAAA,GAAAN,SAAA;QAAA,OAAAE,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAEjB,OAAO,GAAAY,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;cAAAG,QAAA,CAAAE,IAAA;cAAA,OACvBrB,IAAI,CAACK,GAAG,CAACH,cAAc,CAACa,KAAK,CAAC,EAAEX,OAAO,CAAC,CAAC;YAAA;cAAA,OAAAe,QAAA,CAAAK,MAAA,WAAAL,QAAA,CAAAM,IAAA;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA,CACvD;MAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACD,OAAOJ,GAAG;EACZ,CAAC,CAAC,CAACF,OAAO,CAAC;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}