{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  function dagImport(source) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const controller = new AbortController();\n        const signal = abortSignal(controller.signal, options.signal);\n        const {\n          headers,\n          body\n        } = await multipartRequest(source, controller, options.headers);\n        const res = await api.post('dag/import', {\n          signal,\n          headers,\n          body,\n          searchParams: toUrlSearchParams({\n            'pin-roots': options.pinRoots\n          })\n        });\n        for await (const {\n          Root\n        } of res.ndjson()) {\n          if (Root !== undefined) {\n            const {\n              Cid: {\n                '/': Cid\n              },\n              PinErrorMsg\n            } = Root;\n            yield {\n              root: {\n                cid: CID.parse(Cid),\n                pinErrorMsg: PinErrorMsg\n              }\n            };\n          }\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return dagImport;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","abortSignal","multipartRequest","CID","createImport","api","dagImport","source","options","arguments","length","undefined","controller","AbortController","signal","headers","body","res","post","searchParams","pinRoots","Root","ndjson","Cid","PinErrorMsg","root","cid","parse","pinErrorMsg","e","Promise","reject"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/dag/import.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAO,MAAMC,YAAY,GAAGL,SAAS,CAACM,GAAG,IAAI;EAC3C,SAAgBC,SAASA,CAACC,MAAM;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAC9C,MAAMG,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;QACxC,MAAMC,MAAM,GAAGb,WAAW,CAACW,UAAU,CAACE,MAAM,EAAEN,OAAO,CAACM,MAAM,CAAC;QAC7D,MAAM;UAACC,OAAO;UAAEC;QAAI,CAAC,GAAG,MAAMd,gBAAgB,CAACK,MAAM,EAAEK,UAAU,EAAEJ,OAAO,CAACO,OAAO,CAAC;QACnF,MAAME,GAAG,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,YAAY,EAAE;UACvCJ,MAAM;UACNC,OAAO;UACPC,IAAI;UACJG,YAAY,EAAEnB,iBAAiB,CAAC;YAAE,WAAW,EAAEQ,OAAO,CAACY;UAAS,CAAC;QACnE,CAAC,CAAC;QACF,WAAW,MAAM;UAACC;QAAI,CAAC,IAAIJ,GAAG,CAACK,MAAM,CAAC,CAAC,EAAE;UACvC,IAAID,IAAI,KAAKV,SAAS,EAAE;YACtB,MAAM;cACJY,GAAG,EAAE;gBAAC,GAAG,EAAEA;cAAG,CAAC;cACfC;YACF,CAAC,GAAGH,IAAI;YACR,MAAM;cACJI,IAAI,EAAE;gBACJC,GAAG,EAAEvB,GAAG,CAACwB,KAAK,CAACJ,GAAG,CAAC;gBACnBK,WAAW,EAAEJ;cACf;YACF,CAAC;UACH;QACF;MACF,CAAC;IAAA,SAAAK,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOvB,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}