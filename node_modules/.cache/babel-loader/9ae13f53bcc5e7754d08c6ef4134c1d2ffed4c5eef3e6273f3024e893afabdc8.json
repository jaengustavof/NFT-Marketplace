{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport var createImport = configure(function (api) {\n  function dagImport(_x) {\n    return _dagImport.apply(this, arguments);\n  }\n  function _dagImport() {\n    _dagImport = _wrapAsyncGenerator(function (source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var controller, signal, _yield$_awaitAsyncGen, headers, body, res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, Root, Cid, PinErrorMsg;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.next = 4;\n              return _awaitAsyncGenerator(multipartRequest(source, controller, options.headers));\n            case 4:\n              _yield$_awaitAsyncGen = _context.sent;\n              headers = _yield$_awaitAsyncGen.headers;\n              body = _yield$_awaitAsyncGen.body;\n              _context.next = 9;\n              return _awaitAsyncGenerator(api.post('dag/import', {\n                signal: signal,\n                headers: headers,\n                body: body,\n                searchParams: toUrlSearchParams({\n                  'pin-roots': options.pinRoots\n                })\n              }));\n            case 9:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 12;\n              _iterator = _asyncIterator(res.ndjson());\n            case 14:\n              _context.next = 16;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 16:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 25;\n                break;\n              }\n              Root = _step.value.Root;\n              if (!(Root !== undefined)) {\n                _context.next = 22;\n                break;\n              }\n              Cid = Root.Cid['/'], PinErrorMsg = Root.PinErrorMsg;\n              _context.next = 22;\n              return {\n                root: {\n                  cid: CID.parse(Cid),\n                  pinErrorMsg: PinErrorMsg\n                }\n              };\n            case 22:\n              _iteratorAbruptCompletion = false;\n              _context.next = 14;\n              break;\n            case 25:\n              _context.next = 31;\n              break;\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 31:\n              _context.prev = 31;\n              _context.prev = 32;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 36;\n                break;\n              }\n              _context.next = 36;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 36:\n              _context.prev = 36;\n              if (!_didIteratorError) {\n                _context.next = 39;\n                break;\n              }\n              throw _iteratorError;\n            case 39:\n              return _context.finish(36);\n            case 40:\n              return _context.finish(31);\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[12, 27, 31, 41], [32,, 36, 40]]);\n      })();\n    });\n    return _dagImport.apply(this, arguments);\n  }\n  return dagImport;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","abortSignal","multipartRequest","CID","createImport","api","dagImport","_x","_dagImport","apply","arguments","_wrapAsyncGenerator","source","options","length","undefined","_regeneratorRuntime","mark","_callee","controller","signal","_yield$_awaitAsyncGen","headers","body","res","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","Root","Cid","PinErrorMsg","wrap","_callee$","_context","prev","next","AbortController","_awaitAsyncGenerator","sent","post","searchParams","pinRoots","_asyncIterator","ndjson","done","value","root","cid","parse","pinErrorMsg","t0","return","finish","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/dag/import.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}