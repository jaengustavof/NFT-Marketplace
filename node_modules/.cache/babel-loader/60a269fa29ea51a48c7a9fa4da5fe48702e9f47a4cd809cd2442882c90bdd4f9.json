{"ast":null,"code":"import _classCallCheck from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { alloc, concat, slice } from './byte-utils.js';\nvar defaultChunkSize = 256;\nexport var Bl = /*#__PURE__*/function () {\n  function Bl() {\n    var chunkSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultChunkSize;\n    _classCallCheck(this, Bl);\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  _createClass(Bl, [{\n    key: \"reset\",\n    value: function reset() {\n      this.cursor = 0;\n      this.maxCursor = -1;\n      if (this.chunks.length) {\n        this.chunks = [];\n      }\n      if (this._initReuseChunk !== null) {\n        this.chunks.push(this._initReuseChunk);\n        this.maxCursor = this._initReuseChunk.length - 1;\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(bytes) {\n      var topChunk = this.chunks[this.chunks.length - 1];\n      var newMax = this.cursor + bytes.length;\n      if (newMax <= this.maxCursor + 1) {\n        var chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        topChunk.set(bytes, chunkPos);\n      } else {\n        if (topChunk) {\n          var _chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n          if (_chunkPos < topChunk.length) {\n            this.chunks[this.chunks.length - 1] = topChunk.subarray(0, _chunkPos);\n            this.maxCursor = this.cursor - 1;\n          }\n        }\n        if (bytes.length < 64 && bytes.length < this.chunkSize) {\n          topChunk = alloc(this.chunkSize);\n          this.chunks.push(topChunk);\n          this.maxCursor += topChunk.length;\n          if (this._initReuseChunk === null) {\n            this._initReuseChunk = topChunk;\n          }\n          topChunk.set(bytes, 0);\n        } else {\n          this.chunks.push(bytes);\n          this.maxCursor += bytes.length;\n        }\n      }\n      this.cursor += bytes.length;\n    }\n  }, {\n    key: \"toBytes\",\n    value: function toBytes() {\n      var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var byts;\n      if (this.chunks.length === 1) {\n        var chunk = this.chunks[0];\n        if (reset && this.cursor > chunk.length / 2) {\n          byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n          this._initReuseChunk = null;\n          this.chunks = [];\n        } else {\n          byts = slice(chunk, 0, this.cursor);\n        }\n      } else {\n        byts = concat(this.chunks, this.cursor);\n      }\n      if (reset) {\n        this.reset();\n      }\n      return byts;\n    }\n  }]);\n  return Bl;\n}();","map":{"version":3,"names":["alloc","concat","slice","defaultChunkSize","Bl","chunkSize","arguments","length","undefined","_classCallCheck","cursor","maxCursor","chunks","_initReuseChunk","_createClass","key","value","reset","push","bytes","topChunk","newMax","chunkPos","set","subarray","toBytes","byts","chunk"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/cborg/esm/lib/bl.js"],"sourcesContent":["import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}