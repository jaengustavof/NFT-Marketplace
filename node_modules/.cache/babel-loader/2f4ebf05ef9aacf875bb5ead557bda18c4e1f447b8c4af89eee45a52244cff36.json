{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport var createGet = configure(function (api) {\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('object/get', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: \"\".concat(cid instanceof Uint8Array ? CID.decode(cid) : cid),\n                dataEncoding: 'base64'\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              Data: uint8ArrayFromString(data.Data, 'base64pad'),\n              Links: (data.Links || []).map(function (link) {\n                return {\n                  Name: link.Name,\n                  Hash: CID.parse(link.Hash),\n                  Tsize: link.Size\n                };\n              })\n            });\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _get.apply(this, arguments);\n  }\n  return get;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","fromString","uint8ArrayFromString","createGet","api","get","_x","_get","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cid","options","res","data","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","arg","concat","Uint8Array","decode","dataEncoding","headers","sent","json","abrupt","Data","Links","map","link","Name","Hash","parse","Tsize","Size","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/object/get.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n  return get;\n});"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAC5E,OAAO,IAAMC,SAAS,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAAA,SACzBC,GAAGA,CAAAC,EAAA;IAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,KAAA;IAAAA,IAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAlB,SAAAC,QAAmBC,GAAG;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAER,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OAChBnB,GAAG,CAACsB,IAAI,CAAC,YAAY,EAAE;cACvCC,MAAM,EAAEZ,OAAO,CAACY,MAAM;cACtBC,YAAY,EAAE5B,iBAAiB,CAAA6B,aAAA;gBAC7BC,GAAG,KAAAC,MAAA,CAAMjB,GAAG,YAAYkB,UAAU,GAAGlC,GAAG,CAACmC,MAAM,CAACnB,GAAG,CAAC,GAAGA,GAAG,CAAG;gBAC7DoB,YAAY,EAAE;cAAQ,GACnBnB,OAAO,CACX,CAAC;cACFoB,OAAO,EAAEpB,OAAO,CAACoB;YACnB,CAAC,CAAC;UAAA;YARInB,GAAG,GAAAK,QAAA,CAAAe,IAAA;YAAAf,QAAA,CAAAE,IAAA;YAAA,OASUP,GAAG,CAACqB,IAAI,CAAC,CAAC;UAAA;YAAvBpB,IAAI,GAAAI,QAAA,CAAAe,IAAA;YAAA,OAAAf,QAAA,CAAAiB,MAAA,WACH;cACLC,IAAI,EAAErC,oBAAoB,CAACe,IAAI,CAACsB,IAAI,EAAE,WAAW,CAAC;cAClDC,KAAK,EAAE,CAACvB,IAAI,CAACuB,KAAK,IAAI,EAAE,EAAEC,GAAG,CAAC,UAAAC,IAAI;gBAAA,OAAK;kBACrCC,IAAI,EAAED,IAAI,CAACC,IAAI;kBACfC,IAAI,EAAE9C,GAAG,CAAC+C,KAAK,CAACH,IAAI,CAACE,IAAI,CAAC;kBAC1BE,KAAK,EAAEJ,IAAI,CAACK;gBACd,CAAC;cAAA,CAAC;YACJ,CAAC;UAAA;UAAA;YAAA,OAAA1B,QAAA,CAAA2B,IAAA;QAAA;MAAA,GAAAnC,OAAA;IAAA,CACF;IAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOJ,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}