{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport const createRefs = configure((api, opts) => {\n  const refs = function (args) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const argsArr = Array.isArray(args) ? args : [args];\n        const res = await api.post('refs', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams({\n            arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n            ...options\n          }),\n          headers: options.headers,\n          transform: objectToCamel\n        });\n        yield* res.ndjson();\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  });\n});","map":{"version":3,"names":["CID","objectToCamel","configure","toUrlSearchParams","createLocal","createRefs","api","opts","refs","args","options","arguments","length","undefined","argsArr","Array","isArray","res","post","signal","searchParams","arg","map","Uint8Array","decode","headers","transform","ndjson","e","Promise","reject","Object","assign","local"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/refs/index.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport const createRefs = configure((api, opts) => {\n  const refs = async function* (args, options = {}) {\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${ arg instanceof Uint8Array ? CID.decode(arg) : arg }`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  };\n  return Object.assign(refs, { local: createLocal(opts) });\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAO,MAAMC,UAAU,GAAGH,SAAS,CAAC,CAACI,GAAG,EAAEC,IAAI,KAAK;EACjD,MAAMC,IAAI,GAAG,SAAAA,CAAiBC,IAAI;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAChD,MAAMG,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;QACnD,MAAMQ,GAAG,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,MAAM,EAAE;UACjCC,MAAM,EAAET,OAAO,CAACS,MAAM;UACtBC,YAAY,EAAEjB,iBAAiB,CAAC;YAC9BkB,GAAG,EAAEP,OAAO,CAACQ,GAAG,CAACD,GAAG,IAAK,GAAGA,GAAG,YAAYE,UAAU,GAAGvB,GAAG,CAACwB,MAAM,CAACH,GAAG,CAAC,GAAGA,GAAK,EAAC,CAAC;YACjF,GAAGX;UACL,CAAC,CAAC;UACFe,OAAO,EAAEf,OAAO,CAACe,OAAO;UACxBC,SAAS,EAAEzB;QACb,CAAC,CAAC;QACF,OAAOgB,GAAG,CAACU,MAAM,CAAC,CAAC;MACrB,CAAC;IAAA,SAAAC,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOG,MAAM,CAACC,MAAM,CAACxB,IAAI,EAAE;IAAEyB,KAAK,EAAE7B,WAAW,CAACG,IAAI;EAAE,CAAC,CAAC;AAC1D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}