{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createConnect = configure(function (api) {\n  function connect(_x) {\n    return _connect.apply(this, arguments);\n  }\n  function _connect() {\n    _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(addr) {\n      var options,\n        res,\n        _yield$res$json,\n        Strings,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('swarm/connect', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: addr\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            _yield$res$json = _context.sent;\n            Strings = _yield$res$json.Strings;\n            return _context.abrupt(\"return\", Strings || []);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _connect.apply(this, arguments);\n  }\n  return connect;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createConnect","api","connect","_x","_connect","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","addr","options","res","_yield$res$json","Strings","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","arg","headers","sent","json","abrupt","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/swarm/connect.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createConnect = configure(api => {\n  async function connect(addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return connect;\n});"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,IAAMC,aAAa,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAAA,SAC7BC,OAAOA,CAAAC,EAAA;IAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,SAAA;IAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAAuBC,IAAI;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,eAAA;QAAAC,OAAA;QAAAC,KAAA,GAAAV,SAAA;MAAA,OAAAE,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAET,OAAO,GAAAI,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACrBpB,GAAG,CAACuB,IAAI,CAAC,eAAe,EAAE;cAC1CC,MAAM,EAAEb,OAAO,CAACa,MAAM;cACtBC,YAAY,EAAE3B,iBAAiB,CAAA4B,aAAA;gBAC7BC,GAAG,EAAEjB;cAAI,GACNC,OAAO,CACX,CAAC;cACFiB,OAAO,EAAEjB,OAAO,CAACiB;YACnB,CAAC,CAAC;UAAA;YAPIhB,GAAG,GAAAM,QAAA,CAAAW,IAAA;YAAAX,QAAA,CAAAE,IAAA;YAAA,OAQeR,GAAG,CAACkB,IAAI,CAAC,CAAC;UAAA;YAAAjB,eAAA,GAAAK,QAAA,CAAAW,IAAA;YAA3Bf,OAAO,GAAAD,eAAA,CAAPC,OAAO;YAAA,OAAAI,QAAA,CAAAa,MAAA,WACPjB,OAAO,IAAI,EAAE;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAc,IAAA;QAAA;MAAA,GAAAvB,OAAA;IAAA,CACrB;IAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOJ,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}