{"ast":null,"code":"import errCode from 'err-code';\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}","map":{"version":3,"names":["errCode","parseMtime","input","undefined","mtime","secs","nsecs","Seconds","FractionalNanoseconds","Array","isArray","Date","ms","getTime","Math","floor","Object","prototype","hasOwnProperty","call","Error"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/parse-mtime.js"],"sourcesContent":["import errCode from 'err-code';\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,UAAU;AAC9B,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAE;EAChC,IAAIA,KAAK,IAAI,IAAI,EAAE;IACjB,OAAOC,SAAS;EAClB;EACA,IAAIC,KAAK;EACT,IAAIF,KAAK,CAACG,IAAI,IAAI,IAAI,EAAE;IACtBD,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,KAAK,EAAEJ,KAAK,CAACI;IACf,CAAC;EACH;EACA,IAAIJ,KAAK,CAACK,OAAO,IAAI,IAAI,EAAE;IACzBH,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAACK,OAAO;MACnBD,KAAK,EAAEJ,KAAK,CAACM;IACf,CAAC;EACH;EACA,IAAIC,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,EAAE;IACxBE,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAAC,CAAC,CAAC;MACdI,KAAK,EAAEJ,KAAK,CAAC,CAAC;IAChB,CAAC;EACH;EACA,IAAIA,KAAK,YAAYS,IAAI,EAAE;IACzB,MAAMC,EAAE,GAAGV,KAAK,CAACW,OAAO,CAAC,CAAC;IAC1B,MAAMR,IAAI,GAAGS,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,IAAI,CAAC;IAClCR,KAAK,GAAG;MACNC,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAE,CAACM,EAAE,GAAGP,IAAI,GAAG,IAAI,IAAI;IAC9B,CAAC;EACH;EACA,IAAI,CAACW,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACf,KAAK,EAAE,MAAM,CAAC,EAAE;IACxD,OAAOD,SAAS;EAClB;EACA,IAAIC,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACE,KAAK,IAAI,IAAI,KAAKF,KAAK,CAACE,KAAK,GAAG,CAAC,IAAIF,KAAK,CAACE,KAAK,GAAG,SAAS,CAAC,EAAE;IACxF,MAAMN,OAAO,CAAC,IAAIoB,KAAK,CAAC,oDAAoD,CAAC,EAAE,yBAAyB,CAAC;EAC3G;EACA,OAAOhB,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}