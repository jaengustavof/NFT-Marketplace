{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createPeers = configure(function (api) {\n  function peers() {\n    return _peers.apply(this, arguments);\n  }\n  function _peers() {\n    _peers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _yield$res$json,\n        Peers,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('swarm/peers', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            _yield$res$json = _context.sent;\n            Peers = _yield$res$json.Peers;\n            return _context.abrupt(\"return\", (Peers || []).map(function (peer) {\n              return {\n                addr: new Multiaddr(peer.Addr),\n                peer: peer.Peer,\n                muxer: peer.Muxer,\n                latency: peer.Latency,\n                streams: peer.Streams,\n                direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n              };\n            }));\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _peers.apply(this, arguments);\n  }\n  return peers;\n});","map":{"version":3,"names":["Multiaddr","configure","toUrlSearchParams","createPeers","api","peers","_peers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","res","_yield$res$json","Peers","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","headers","sent","json","abrupt","map","peer","addr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/swarm/peers.js"],"sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPeers = configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAAA,SAC3BC,KAAKA,CAAA;IAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,OAAA;IAAAA,MAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAApB,SAAAC,QAAA;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,eAAA;QAAAC,KAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAqBT,OAAO,GAAAI,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACblB,GAAG,CAACqB,IAAI,CAAC,aAAa,EAAE;cACxCC,MAAM,EAAEb,OAAO,CAACa,MAAM;cACtBC,YAAY,EAAEzB,iBAAiB,CAACW,OAAO,CAAC;cACxCe,OAAO,EAAEf,OAAO,CAACe;YACnB,CAAC,CAAC;UAAA;YAJId,GAAG,GAAAM,QAAA,CAAAS,IAAA;YAAAT,QAAA,CAAAE,IAAA;YAAA,OAKaR,GAAG,CAACgB,IAAI,CAAC,CAAC;UAAA;YAAAf,eAAA,GAAAK,QAAA,CAAAS,IAAA;YAAzBb,KAAK,GAAAD,eAAA,CAALC,KAAK;YAAA,OAAAI,QAAA,CAAAW,MAAA,WACL,CAACf,KAAK,IAAI,EAAE,EAAEgB,GAAG,CAAC,UAAAC,IAAI,EAAI;cAC/B,OAAO;gBACLC,IAAI,EAAE,IAAIlC,SAAS,CAACiC,IAAI,CAACE,IAAI,CAAC;gBAC9BF,IAAI,EAAEA,IAAI,CAACG,IAAI;gBACfC,KAAK,EAAEJ,IAAI,CAACK,KAAK;gBACjBC,OAAO,EAAEN,IAAI,CAACO,OAAO;gBACrBC,OAAO,EAAER,IAAI,CAACS,OAAO;gBACrBC,SAAS,EAAEV,IAAI,CAACW,SAAS,IAAI,IAAI,GAAGpB,SAAS,GAAGS,IAAI,CAACW,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG;cACrF,CAAC;YACH,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAxB,QAAA,CAAAyB,IAAA;QAAA;MAAA,GAAAjC,OAAA;IAAA,CACH;IAAA,OAAAN,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOH,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}