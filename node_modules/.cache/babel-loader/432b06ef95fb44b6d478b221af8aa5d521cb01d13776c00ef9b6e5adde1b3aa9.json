{"ast":null,"code":"'use strict';\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nfunction browserReadableStreamToIt(stream) {\n  try {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return async function* () {\n      const reader = stream.getReader();\n      try {\n        while (true) {\n          const result = await reader.read();\n          if (result.done) {\n            return;\n          }\n          yield result.value;\n        }\n      } finally {\n        if (options.preventCancel !== true) {\n          reader.cancel();\n        }\n        reader.releaseLock();\n      }\n    }();\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\nmodule.exports = browserReadableStreamToIt;","map":{"version":3,"names":["browserReadableStreamToIt","stream","options","arguments","length","undefined","reader","getReader","result","read","done","value","preventCancel","cancel","releaseLock","e","Promise","reject","module","exports"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/browser-readablestream-to-it/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAiBA,yBAAyBA,CAAEC,MAAM;EAAA;IAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,0BAAE;MAChE,MAAMG,MAAM,GAAGL,MAAM,CAACM,SAAS,CAAC,CAAC;MAEjC,IAAI;QACF,OAAO,IAAI,EAAE;UACX,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;UAElC,IAAID,MAAM,CAACE,IAAI,EAAE;YACf;UACF;UAEA,MAAMF,MAAM,CAACG,KAAK;QACpB;MACF,CAAC,SAAS;QACR,IAAIT,OAAO,CAACU,aAAa,KAAK,IAAI,EAAE;UAClCN,MAAM,CAACO,MAAM,CAAC,CAAC;QACjB;QAEAP,MAAM,CAACQ,WAAW,CAAC,CAAC;MACtB;IACF,CAAC;EAAA,SAAAC,CAAA;IAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;EAAA;AAAA;AAEDG,MAAM,CAACC,OAAO,GAAGnB,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}