{"ast":null,"code":"import { Multiaddr } from 'multiaddr';\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({\n  ignoreUndefined: true\n});\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${protocol}://${host}:${port}`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor() {\n    var _this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    _this = this;\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = function (resource) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`;\n      }\n      return fetch.call(_this, resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;","map":{"version":3,"names":["Multiaddr","isBrowser","isWebWorker","isNode","parseDuration","debug","HTTP","mergeOpts","toUrlString","getAgent","log","merge","bind","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","arguments","length","undefined","url","opts","agent","isMultiaddr","URL","replace","host","split","apiPath","pathname","Agent","keepAlive","maxSockets","Number","errorHandler","response","msg","headers","get","startsWith","data","json","Message","message","text","err","error","HTTPError","includes","TimeoutError","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","constructor","_this","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","key","append","isNaN","this","put","delete","fetch","resource","call","method"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/core.js"],"sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}