{"ast":null,"code":"import { encodeQuery, decodePin } from './utils.js';\nexport function createLs(client) {\n  function ls(_ref) {\n    try {\n      let {\n        timeout,\n        signal,\n        headers,\n        ...query\n      } = _ref;\n      return async function* () {\n        const response = await client.post('pin/remote/ls', {\n          timeout,\n          signal,\n          headers,\n          searchParams: encodeQuery(query)\n        });\n        for await (const pin of response.ndjson()) {\n          yield decodePin(pin);\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return ls;\n}","map":{"version":3,"names":["encodeQuery","decodePin","createLs","client","ls","_ref","timeout","signal","headers","query","response","post","searchParams","pin","ndjson","e","Promise","reject"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/remote/ls.js"],"sourcesContent":["import {\n  encodeQuery,\n  decodePin\n} from './utils.js';\nexport function createLs(client) {\n  async function* ls({timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    });\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin);\n    }\n  }\n  return ls;\n}"],"mappings":"AAAA,SACEA,WAAW,EACXC,SAAS,QACJ,YAAY;AACnB,OAAO,SAASC,QAAQA,CAACC,MAAM,EAAE;EAC/B,SAAgBC,EAAEA,CAAAC,IAAA;IAAA;MAAA,IAAC;QAACC,OAAO;QAAEC,MAAM;QAAEC,OAAO;QAAE,GAAGC;MAAK,CAAC,GAAAJ,IAAA;MAAA,0BAAE;QACvD,MAAMK,QAAQ,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,eAAe,EAAE;UAClDL,OAAO;UACPC,MAAM;UACNC,OAAO;UACPI,YAAY,EAAEZ,WAAW,CAACS,KAAK;QACjC,CAAC,CAAC;QACF,WAAW,MAAMI,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC,CAAC,EAAE;UACzC,MAAMb,SAAS,CAACY,GAAG,CAAC;QACtB;MACF,CAAC;IAAA,SAAAE,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOX,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}