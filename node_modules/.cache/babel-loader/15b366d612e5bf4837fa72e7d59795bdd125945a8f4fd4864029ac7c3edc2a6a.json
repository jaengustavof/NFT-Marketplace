{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport async function* resolve(cid, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK');\n    }\n    const cid = CID.asCID(value);\n    if (cid) {\n      lastCid = cid;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n}","map":{"version":3,"names":["CID","errCode","resolve","cid","path","codecs","getBlock","options","load","codec","getCodec","code","block","decode","parts","split","filter","Boolean","value","lastCid","length","key","shift","Error","Object","prototype","hasOwnProperty","call","remainderPath","join","asCID"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/resolve.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport async function* resolve(cid, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    const cid = CID.asCID(value);\n    if (cid) {\n      lastCid = cid;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAO,gBAAgBC,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACnE,MAAMC,IAAI,GAAG,MAAML,GAAG,IAAI;IACxB,MAAMM,KAAK,GAAG,MAAMJ,MAAM,CAACK,QAAQ,CAACP,GAAG,CAACQ,IAAI,CAAC;IAC7C,MAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACH,GAAG,EAAEI,OAAO,CAAC;IAC1C,OAAOE,KAAK,CAACI,MAAM,CAACD,KAAK,CAAC;EAC5B,CAAC;EACD,MAAME,KAAK,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAC7C,IAAIC,KAAK,GAAG,MAAMV,IAAI,CAACL,GAAG,CAAC;EAC3B,IAAIgB,OAAO,GAAGhB,GAAG;EACjB,OAAOW,KAAK,CAACM,MAAM,EAAE;IACnB,MAAMC,GAAG,GAAGP,KAAK,CAACQ,KAAK,CAAC,CAAC;IACzB,IAAI,CAACD,GAAG,EAAE;MACR,MAAMpB,OAAO,CAAC,IAAIsB,KAAK,CAAE,2BAA2BnB,IAAM,GAAE,CAAC,EAAE,kBAAkB,CAAC;IACpF;IACA,IAAIoB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,KAAK,EAAEG,GAAG,CAAC,EAAE;MACpDH,KAAK,GAAGA,KAAK,CAACG,GAAG,CAAC;MAClB,MAAM;QACJH,KAAK;QACLU,aAAa,EAAEd,KAAK,CAACe,IAAI,CAAC,GAAG;MAC/B,CAAC;IACH,CAAC,MAAM;MACL,MAAM5B,OAAO,CAAC,IAAIsB,KAAK,CAAE,kBAAkBF,GAAK,WAAWF,OAAS,EAAC,CAAC,EAAE,aAAa,CAAC;IACxF;IACA,MAAMhB,GAAG,GAAGH,GAAG,CAAC8B,KAAK,CAACZ,KAAK,CAAC;IAC5B,IAAIf,GAAG,EAAE;MACPgB,OAAO,GAAGhB,GAAG;MACbe,KAAK,GAAG,MAAMV,IAAI,CAACU,KAAK,CAAC;IAC3B;EACF;EACA,MAAM;IACJA,KAAK;IACLU,aAAa,EAAE;EACjB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}