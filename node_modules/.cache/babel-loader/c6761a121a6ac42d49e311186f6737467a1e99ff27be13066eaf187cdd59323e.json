{"ast":null,"code":"export class SubscriptionTracker {\n  constructor() {\n    this._subs = new Map();\n  }\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || [];\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`);\n    }\n    const controller = new AbortController();\n    this._subs.set(topic, [{\n      handler,\n      controller\n    }].concat(topicSubs));\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler));\n    }\n    return controller.signal;\n  }\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) || [];\n    let unsubs;\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n      unsubs = subs;\n    }\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic);\n    }\n    unsubs.forEach(s => s.controller.abort());\n  }\n}","map":{"version":3,"names":["SubscriptionTracker","constructor","_subs","Map","subscribe","topic","handler","signal","topicSubs","get","find","s","Error","controller","AbortController","set","concat","addEventListener","unsubscribe","subs","unsubs","filter","length","delete","forEach","abort"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pubsub/subscription-tracker.js"],"sourcesContent":["export class SubscriptionTracker {\n  constructor() {\n    this._subs = new Map();\n  }\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || [];\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${ topic } with this handler`);\n    }\n    const controller = new AbortController();\n    this._subs.set(topic, [{\n        handler,\n        controller\n      }].concat(topicSubs));\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler));\n    }\n    return controller.signal;\n  }\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) || [];\n    let unsubs;\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n      unsubs = subs;\n    }\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic);\n    }\n    unsubs.forEach(s => s.controller.abort());\n  }\n}"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,CAAC;EAC/BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxB;EACAC,SAASA,CAACC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAE;IAChC,MAAMC,SAAS,GAAG,IAAI,CAACN,KAAK,CAACO,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE;IAC7C,IAAIG,SAAS,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC,EAAE;MAC9C,MAAM,IAAIM,KAAK,CAAE,yBAAyBP,KAAO,oBAAmB,CAAC;IACvE;IACA,MAAMQ,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,IAAI,CAACZ,KAAK,CAACa,GAAG,CAACV,KAAK,EAAE,CAAC;MACnBC,OAAO;MACPO;IACF,CAAC,CAAC,CAACG,MAAM,CAACR,SAAS,CAAC,CAAC;IACvB,IAAID,MAAM,EAAE;MACVA,MAAM,CAACU,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACC,WAAW,CAACb,KAAK,EAAEC,OAAO,CAAC,CAAC;IAC1E;IACA,OAAOO,UAAU,CAACN,MAAM;EAC1B;EACAW,WAAWA,CAACb,KAAK,EAAEC,OAAO,EAAE;IAC1B,MAAMa,IAAI,GAAG,IAAI,CAACjB,KAAK,CAACO,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE;IACxC,IAAIe,MAAM;IACV,IAAId,OAAO,EAAE;MACX,IAAI,CAACJ,KAAK,CAACa,GAAG,CAACV,KAAK,EAAEc,IAAI,CAACE,MAAM,CAACV,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC,CAAC;MAC9Dc,MAAM,GAAGD,IAAI,CAACE,MAAM,CAACV,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC;IAClD,CAAC,MAAM;MACL,IAAI,CAACJ,KAAK,CAACa,GAAG,CAACV,KAAK,EAAE,EAAE,CAAC;MACzBe,MAAM,GAAGD,IAAI;IACf;IACA,IAAI,CAAC,CAAC,IAAI,CAACjB,KAAK,CAACO,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE,EAAEiB,MAAM,EAAE;MACzC,IAAI,CAACpB,KAAK,CAACqB,MAAM,CAAClB,KAAK,CAAC;IAC1B;IACAe,MAAM,CAACI,OAAO,CAACb,CAAC,IAAIA,CAAC,CAACE,UAAU,CAACY,KAAK,CAAC,CAAC,CAAC;EAC3C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}