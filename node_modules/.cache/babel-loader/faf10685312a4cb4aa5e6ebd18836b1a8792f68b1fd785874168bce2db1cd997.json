{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport { prepare, validate, createNode, createLink } from './util.js';\nexport var name = 'dag-pb';\nexport var code = 112;\nexport function encode(node) {\n  validate(node);\n  var pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(function (l) {\n      var link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  var pbn = decodeNode(bytes);\n  var node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(function (l) {\n      var link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport { prepare, validate, createNode, createLink };","map":{"version":3,"names":["CID","decodeNode","encodeNode","prepare","validate","createNode","createLink","name","code","encode","node","pbn","Links","map","l","link","Hash","bytes","Name","undefined","Tsize","Data","decode","e","Error"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/@ipld/dag-pb/esm/src/index.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SACEC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,UAAU,QACL,WAAW;AAClB,OAAO,IAAMC,IAAI,GAAG,QAAQ;AAC5B,OAAO,IAAMC,IAAI,GAAG,GAAG;AACvB,OAAO,SAASC,MAAMA,CAACC,IAAI,EAAE;EAC3BN,QAAQ,CAACM,IAAI,CAAC;EACd,IAAMC,GAAG,GAAG,CAAC,CAAC;EACd,IAAID,IAAI,CAACE,KAAK,EAAE;IACdD,GAAG,CAACC,KAAK,GAAGF,IAAI,CAACE,KAAK,CAACC,GAAG,CAAC,UAAAC,CAAC,EAAI;MAC9B,IAAMC,IAAI,GAAG,CAAC,CAAC;MACf,IAAID,CAAC,CAACE,IAAI,EAAE;QACVD,IAAI,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,CAACC,KAAK;MAC1B;MACA,IAAIH,CAAC,CAACI,IAAI,KAAKC,SAAS,EAAE;QACxBJ,IAAI,CAACG,IAAI,GAAGJ,CAAC,CAACI,IAAI;MACpB;MACA,IAAIJ,CAAC,CAACM,KAAK,KAAKD,SAAS,EAAE;QACzBJ,IAAI,CAACK,KAAK,GAAGN,CAAC,CAACM,KAAK;MACtB;MACA,OAAOL,IAAI;IACb,CAAC,CAAC;EACJ;EACA,IAAIL,IAAI,CAACW,IAAI,EAAE;IACbV,GAAG,CAACU,IAAI,GAAGX,IAAI,CAACW,IAAI;EACtB;EACA,OAAOnB,UAAU,CAACS,GAAG,CAAC;AACxB;AACA,OAAO,SAASW,MAAMA,CAACL,KAAK,EAAE;EAC5B,IAAMN,GAAG,GAAGV,UAAU,CAACgB,KAAK,CAAC;EAC7B,IAAMP,IAAI,GAAG,CAAC,CAAC;EACf,IAAIC,GAAG,CAACU,IAAI,EAAE;IACZX,IAAI,CAACW,IAAI,GAAGV,GAAG,CAACU,IAAI;EACtB;EACA,IAAIV,GAAG,CAACC,KAAK,EAAE;IACbF,IAAI,CAACE,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACC,GAAG,CAAC,UAAAC,CAAC,EAAI;MAC9B,IAAMC,IAAI,GAAG,CAAC,CAAC;MACf,IAAI;QACFA,IAAI,CAACC,IAAI,GAAGhB,GAAG,CAACsB,MAAM,CAACR,CAAC,CAACE,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOO,CAAC,EAAE,CACZ;MACA,IAAI,CAACR,IAAI,CAACC,IAAI,EAAE;QACd,MAAM,IAAIQ,KAAK,CAAC,gDAAgD,CAAC;MACnE;MACA,IAAIV,CAAC,CAACI,IAAI,KAAKC,SAAS,EAAE;QACxBJ,IAAI,CAACG,IAAI,GAAGJ,CAAC,CAACI,IAAI;MACpB;MACA,IAAIJ,CAAC,CAACM,KAAK,KAAKD,SAAS,EAAE;QACzBJ,IAAI,CAACK,KAAK,GAAGN,CAAC,CAACM,KAAK;MACtB;MACA,OAAOL,IAAI;IACb,CAAC,CAAC;EACJ;EACA,OAAOL,IAAI;AACb;AACA,SACEP,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}