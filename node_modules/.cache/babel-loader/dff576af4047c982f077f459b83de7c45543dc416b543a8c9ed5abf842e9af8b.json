{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Multiaddr } from 'multiaddr';\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nvar log = debug('ipfs-http-client:lib:error-handler');\nvar merge = mergeOpts.bind({\n  ignoreUndefined: true\n});\nvar DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nvar DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nvar DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nvar normalizeOptions = function normalizeOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var url;\n  var opts = {};\n  var agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    var protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    var host = (opts.host || DEFAULT_HOST).split(':')[0];\n    var port = opts.port || DEFAULT_PORT;\n    url = new URL(\"\".concat(protocol, \"://\").concat(host, \":\").concat(port));\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    var Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url: url,\n    agent: agent\n  });\n};\nexport var errorHandler = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n    var msg, data, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          if (!(response.headers.get('Content-Type') || '').startsWith('application/json')) {\n            _context.next = 9;\n            break;\n          }\n          _context.next = 4;\n          return response.json();\n        case 4:\n          data = _context.sent;\n          log(data);\n          msg = data.Message || data.message;\n          _context.next = 12;\n          break;\n        case 9:\n          _context.next = 11;\n          return response.text();\n        case 11:\n          msg = _context.sent;\n        case 12:\n          _context.next = 18;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          log('Failed to parse error response', _context.t0);\n          msg = _context.t0.message;\n        case 18:\n          error = new HTTP.HTTPError(response);\n          if (msg) {\n            if (msg.includes('deadline has elapsed')) {\n              error = new HTTP.TimeoutError();\n            }\n            if (msg && msg.includes('context deadline exceeded')) {\n              error = new HTTP.TimeoutError();\n            }\n          }\n          if (msg && msg.includes('request timed out')) {\n            error = new HTTP.TimeoutError();\n          }\n          if (msg) {\n            error.message = msg;\n          }\n          throw error;\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return function errorHandler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nvar kebabCase = function kebabCase(str) {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nvar parseTimeout = function parseTimeout(value) {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport var Client = /*#__PURE__*/function (_HTTP) {\n  _inherits(Client, _HTTP);\n  var _super = _createSuper(Client);\n  function Client() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Client);\n    var opts = normalizeOptions(options);\n    _this = _super.call(this, {\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: \"\".concat(opts.url),\n      handleError: errorHandler,\n      transformSearchParams: function transformSearchParams(search) {\n        var out = new URLSearchParams();\n        var _iterator = _createForOfIteratorHelper(search),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n            if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n              out.append(kebabCase(key), value);\n            }\n            if (key === 'timeout' && !isNaN(value)) {\n              out.append(kebabCase(key), value);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete _this.get;\n    delete _this.put;\n    delete _this.delete;\n    delete _this.options;\n    var fetch = _this.fetch;\n    _this.fetch = function (resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = \"\".concat(opts.url, \"/\").concat(resource);\n      }\n      return fetch.call(_assertThisInitialized(_this), resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n    return _this;\n  }\n  return _createClass(Client);\n}(HTTP);\nexport var HTTPError = HTTP.HTTPError;","map":{"version":3,"names":["Multiaddr","isBrowser","isWebWorker","isNode","parseDuration","debug","HTTP","mergeOpts","toUrlString","getAgent","log","merge","bind","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","arguments","length","undefined","url","opts","agent","isMultiaddr","URL","replace","host","split","concat","apiPath","pathname","Agent","keepAlive","maxSockets","_objectSpread","Number","errorHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","msg","data","error","wrap","_callee$","_context","prev","next","headers","get","startsWith","json","sent","Message","message","text","t0","HTTPError","includes","TimeoutError","stop","_x","apply","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","_HTTP","_inherits","_super","_createSuper","_this","_classCallCheck","call","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","key","append","isNaN","err","e","f","put","delete","fetch","resource","_assertThisInitialized","method","_createClass"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/core.js"],"sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}