{"ast":null,"code":"import _createClass from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _slicedToArray from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { coerce, equals as equalBytes } from '../bytes.js';\nimport * as varint from '../varint.js';\nexport var create = function create(code, digest) {\n  var size = digest.byteLength;\n  var sizeOffset = varint.encodingLength(code);\n  var digestOffset = sizeOffset + varint.encodingLength(size);\n  var bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport var decode = function decode(multihash) {\n  var bytes = coerce(multihash);\n  var _varint$decode = varint.decode(bytes),\n    _varint$decode2 = _slicedToArray(_varint$decode, 2),\n    code = _varint$decode2[0],\n    sizeOffset = _varint$decode2[1];\n  var _varint$decode3 = varint.decode(bytes.subarray(sizeOffset)),\n    _varint$decode4 = _slicedToArray(_varint$decode3, 2),\n    size = _varint$decode4[0],\n    digestOffset = _varint$decode4[1];\n  var digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport var equals = function equals(a, b) {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport var Digest = /*#__PURE__*/_createClass(function Digest(code, size, digest, bytes) {\n  _classCallCheck(this, Digest);\n  this.code = code;\n  this.size = size;\n  this.digest = digest;\n  this.bytes = bytes;\n});","map":{"version":3,"names":["coerce","equals","equalBytes","varint","create","code","digest","size","byteLength","sizeOffset","encodingLength","digestOffset","bytes","Uint8Array","encodeTo","set","Digest","decode","multihash","_varint$decode","_varint$decode2","_slicedToArray","_varint$decode3","subarray","_varint$decode4","Error","a","b","_createClass","_classCallCheck"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/multiformats/esm/src/hashes/digest.js"],"sourcesContent":["import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}"],"mappings":";;;AAAA,SACEA,MAAM,EACNC,MAAM,IAAIC,UAAU,QACf,aAAa;AACpB,OAAO,KAAKC,MAAM,MAAM,cAAc;AACtC,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,IAAI,EAAEC,MAAM,EAAK;EACtC,IAAMC,IAAI,GAAGD,MAAM,CAACE,UAAU;EAC9B,IAAMC,UAAU,GAAGN,MAAM,CAACO,cAAc,CAACL,IAAI,CAAC;EAC9C,IAAMM,YAAY,GAAGF,UAAU,GAAGN,MAAM,CAACO,cAAc,CAACH,IAAI,CAAC;EAC7D,IAAMK,KAAK,GAAG,IAAIC,UAAU,CAACF,YAAY,GAAGJ,IAAI,CAAC;EACjDJ,MAAM,CAACW,QAAQ,CAACT,IAAI,EAAEO,KAAK,EAAE,CAAC,CAAC;EAC/BT,MAAM,CAACW,QAAQ,CAACP,IAAI,EAAEK,KAAK,EAAEH,UAAU,CAAC;EACxCG,KAAK,CAACG,GAAG,CAACT,MAAM,EAAEK,YAAY,CAAC;EAC/B,OAAO,IAAIK,MAAM,CAACX,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEM,KAAK,CAAC;AAC9C,CAAC;AACD,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAMA,CAAGC,SAAS,EAAI;EACjC,IAAMN,KAAK,GAAGZ,MAAM,CAACkB,SAAS,CAAC;EAC/B,IAAAC,cAAA,GAA2BhB,MAAM,CAACc,MAAM,CAACL,KAAK,CAAC;IAAAQ,eAAA,GAAAC,cAAA,CAAAF,cAAA;IAAxCd,IAAI,GAAAe,eAAA;IAAEX,UAAU,GAAAW,eAAA;EACvB,IAAAE,eAAA,GAA6BnB,MAAM,CAACc,MAAM,CAACL,KAAK,CAACW,QAAQ,CAACd,UAAU,CAAC,CAAC;IAAAe,eAAA,GAAAH,cAAA,CAAAC,eAAA;IAA/Df,IAAI,GAAAiB,eAAA;IAAEb,YAAY,GAAAa,eAAA;EACzB,IAAMlB,MAAM,GAAGM,KAAK,CAACW,QAAQ,CAACd,UAAU,GAAGE,YAAY,CAAC;EACxD,IAAIL,MAAM,CAACE,UAAU,KAAKD,IAAI,EAAE;IAC9B,MAAM,IAAIkB,KAAK,CAAC,kBAAkB,CAAC;EACrC;EACA,OAAO,IAAIT,MAAM,CAACX,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEM,KAAK,CAAC;AAC9C,CAAC;AACD,OAAO,IAAMX,MAAM,GAAG,SAATA,MAAMA,CAAIyB,CAAC,EAAEC,CAAC,EAAK;EAC9B,IAAID,CAAC,KAAKC,CAAC,EAAE;IACX,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOD,CAAC,CAACrB,IAAI,KAAKsB,CAAC,CAACtB,IAAI,IAAIqB,CAAC,CAACnB,IAAI,KAAKoB,CAAC,CAACpB,IAAI,IAAIL,UAAU,CAACwB,CAAC,CAACd,KAAK,EAAEe,CAAC,CAACf,KAAK,CAAC;EAC/E;AACF,CAAC;AACD,WAAaI,MAAM,gBAAAY,YAAA,CACjB,SAAAZ,OAAYX,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEM,KAAK,EAAE;EAAAiB,eAAA,OAAAb,MAAA;EACrC,IAAI,CAACX,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACE,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACM,KAAK,GAAGA,KAAK;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}