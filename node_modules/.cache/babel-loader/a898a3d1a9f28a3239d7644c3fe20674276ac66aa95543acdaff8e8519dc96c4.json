{"ast":null,"code":"import _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport function encodeEndpoint(url) {\n  var href = String(url);\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\nexport function decodeRemoteService(json) {\n  return _objectSpread({\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint)\n  }, json.Stat && {\n    stat: decodeStat(json.Stat)\n  });\n}\nexport function decodeStat(json) {\n  switch (json.Status) {\n    case 'valid':\n      {\n        var _json$PinCount = json.PinCount,\n          Pinning = _json$PinCount.Pinning,\n          Pinned = _json$PinCount.Pinned,\n          Queued = _json$PinCount.Queued,\n          Failed = _json$PinCount.Failed;\n        return {\n          status: 'valid',\n          pinCount: {\n            queued: Queued,\n            pinning: Pinning,\n            pinned: Pinned,\n            failed: Failed\n          }\n        };\n      }\n    case 'invalid':\n      {\n        return {\n          status: 'invalid'\n        };\n      }\n    default:\n      {\n        return {\n          status: json.Status\n        };\n      }\n  }\n}","map":{"version":3,"names":["encodeEndpoint","url","href","String","Error","length","slice","decodeRemoteService","json","_objectSpread","service","Service","endpoint","URL","ApiEndpoint","Stat","stat","decodeStat","Status","_json$PinCount","PinCount","Pinning","Pinned","Queued","Failed","status","pinCount","queued","pinning","pinned","failed"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/remote/service/utils.js"],"sourcesContent":["export function encodeEndpoint(url) {\n  const href = String(url);\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\nexport function decodeRemoteService(json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...json.Stat && { stat: decodeStat(json.Stat) }\n  };\n}\nexport function decodeStat(json) {\n  switch (json.Status) {\n  case 'valid': {\n      const {Pinning, Pinned, Queued, Failed} = json.PinCount;\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      };\n    }\n  case 'invalid': {\n      return { status: 'invalid' };\n    }\n  default: {\n      return { status: json.Status };\n    }\n  }\n}"],"mappings":";AAAA,OAAO,SAASA,cAAcA,CAACC,GAAG,EAAE;EAClC,IAAMC,IAAI,GAAGC,MAAM,CAACF,GAAG,CAAC;EACxB,IAAIC,IAAI,KAAK,WAAW,EAAE;IACxB,MAAME,KAAK,CAAC,sBAAsB,CAAC;EACrC;EACA,OAAOF,IAAI,CAACA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGJ,IAAI;AACjE;AACA,OAAO,SAASK,mBAAmBA,CAACC,IAAI,EAAE;EACxC,OAAAC,aAAA;IACEC,OAAO,EAAEF,IAAI,CAACG,OAAO;IACrBC,QAAQ,EAAE,IAAIC,GAAG,CAACL,IAAI,CAACM,WAAW;EAAC,GAChCN,IAAI,CAACO,IAAI,IAAI;IAAEC,IAAI,EAAEC,UAAU,CAACT,IAAI,CAACO,IAAI;EAAE,CAAC;AAEnD;AACA,OAAO,SAASE,UAAUA,CAACT,IAAI,EAAE;EAC/B,QAAQA,IAAI,CAACU,MAAM;IACnB,KAAK,OAAO;MAAE;QACV,IAAAC,cAAA,GAA0CX,IAAI,CAACY,QAAQ;UAAhDC,OAAO,GAAAF,cAAA,CAAPE,OAAO;UAAEC,MAAM,GAAAH,cAAA,CAANG,MAAM;UAAEC,MAAM,GAAAJ,cAAA,CAANI,MAAM;UAAEC,MAAM,GAAAL,cAAA,CAANK,MAAM;QACtC,OAAO;UACLC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE;YACRC,MAAM,EAAEJ,MAAM;YACdK,OAAO,EAAEP,OAAO;YAChBQ,MAAM,EAAEP,MAAM;YACdQ,MAAM,EAAEN;UACV;QACF,CAAC;MACH;IACF,KAAK,SAAS;MAAE;QACZ,OAAO;UAAEC,MAAM,EAAE;QAAU,CAAC;MAC9B;IACF;MAAS;QACL,OAAO;UAAEA,MAAM,EAAEjB,IAAI,CAACU;QAAO,CAAC;MAChC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}