{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport const createLs = configure(api => {\n  function ls() {\n    try {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return async function* () {\n        let paths = [];\n        if (options.paths) {\n          paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n        }\n        const res = await api.post('pin/ls', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams({\n            ...options,\n            arg: paths.map(path => `${path}`),\n            stream: true\n          }),\n          headers: options.headers\n        });\n        for await (const pin of res.ndjson()) {\n          if (pin.Keys) {\n            for (const cid of Object.keys(pin.Keys)) {\n              yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n            }\n            return;\n          }\n          yield toPin(pin.Type, pin.Cid, pin.Metadata);\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return ls;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","toPin","type","cid","metadata","pin","parse","createLs","api","ls","options","arguments","length","undefined","paths","Array","isArray","res","post","signal","searchParams","arg","map","path","stream","headers","ndjson","Keys","Object","keys","Type","Metadata","Cid","e","Promise","reject"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/ls.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport const createLs = configure(api => {\n  async function* ls(options = {}) {\n    let paths = [];\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n    }\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${ path }`),\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) {\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n        }\n        return;\n      }\n      yield toPin(pin.Type, pin.Cid, pin.Metadata);\n    }\n  }\n  return ls;\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,KAAKA,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EAClC,MAAMC,GAAG,GAAG;IACVH,IAAI;IACJC,GAAG,EAAEL,GAAG,CAACQ,KAAK,CAACH,GAAG;EACpB,CAAC;EACD,IAAIC,QAAQ,EAAE;IACZC,GAAG,CAACD,QAAQ,GAAGA,QAAQ;EACzB;EACA,OAAOC,GAAG;AACZ;AACA,OAAO,MAAME,QAAQ,GAAGR,SAAS,CAACS,GAAG,IAAI;EACvC,SAAgBC,EAAEA,CAAA;IAAA;MAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAC/B,IAAIG,KAAK,GAAG,EAAE;QACd,IAAIJ,OAAO,CAACI,KAAK,EAAE;UACjBA,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACN,OAAO,CAACI,KAAK,CAAC,GAAGJ,OAAO,CAACI,KAAK,GAAG,CAACJ,OAAO,CAACI,KAAK,CAAC;QACxE;QACA,MAAMG,GAAG,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,QAAQ,EAAE;UACnCC,MAAM,EAAET,OAAO,CAACS,MAAM;UACtBC,YAAY,EAAEpB,iBAAiB,CAAC;YAC9B,GAAGU,OAAO;YACVW,GAAG,EAAEP,KAAK,CAACQ,GAAG,CAACC,IAAI,IAAK,GAAGA,IAAM,EAAC,CAAC;YACnCC,MAAM,EAAE;UACV,CAAC,CAAC;UACFC,OAAO,EAAEf,OAAO,CAACe;QACnB,CAAC,CAAC;QACF,WAAW,MAAMpB,GAAG,IAAIY,GAAG,CAACS,MAAM,CAAC,CAAC,EAAE;UACpC,IAAIrB,GAAG,CAACsB,IAAI,EAAE;YACZ,KAAK,MAAMxB,GAAG,IAAIyB,MAAM,CAACC,IAAI,CAACxB,GAAG,CAACsB,IAAI,CAAC,EAAE;cACvC,MAAM1B,KAAK,CAACI,GAAG,CAACsB,IAAI,CAACxB,GAAG,CAAC,CAAC2B,IAAI,EAAE3B,GAAG,EAAEE,GAAG,CAACsB,IAAI,CAACxB,GAAG,CAAC,CAAC4B,QAAQ,CAAC;YAC9D;YACA;UACF;UACA,MAAM9B,KAAK,CAACI,GAAG,CAACyB,IAAI,EAAEzB,GAAG,CAAC2B,GAAG,EAAE3B,GAAG,CAAC0B,QAAQ,CAAC;QAC9C;MACF,CAAC;IAAA,SAAAE,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOxB,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}