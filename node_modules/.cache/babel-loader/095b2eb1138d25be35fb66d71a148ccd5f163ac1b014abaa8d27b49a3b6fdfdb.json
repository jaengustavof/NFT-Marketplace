{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport var createWrite = configure(function (api) {\n  function write(_x, _x2) {\n    return _write.apply(this, arguments);\n  }\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path, input) {\n      var options,\n        controller,\n        signal,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            controller = new AbortController();\n            signal = abortSignal(controller.signal, options.signal);\n            _context.t0 = api;\n            _context.t1 = _objectSpread;\n            _context.t2 = {\n              signal: signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: path,\n                streamChannels: true,\n                count: options.length\n              }, options))\n            };\n            _context.next = 8;\n            return multipartRequest([{\n              content: input,\n              path: 'arg',\n              mode: modeToString(options.mode),\n              mtime: parseMtime(options.mtime)\n            }], controller, options.headers);\n          case 8:\n            _context.t3 = _context.sent;\n            _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n            _context.next = 12;\n            return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n          case 12:\n            res = _context.sent;\n            _context.next = 15;\n            return res.text();\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _write.apply(this, arguments);\n  }\n  return write;\n});","map":{"version":3,"names":["modeToString","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","createWrite","api","write","_x","_x2","_write","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","input","options","controller","signal","res","_args","wrap","_callee$","_context","prev","next","length","undefined","AbortController","t0","t1","_objectSpread","t2","searchParams","arg","streamChannels","count","content","mode","mtime","headers","t3","sent","t4","post","call","text","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/files/write.js"],"sourcesContent":["import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createWrite = configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,IAAMC,WAAW,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAAA,SAC3BC,KAAKA,CAAAC,EAAA,EAAAC,GAAA;IAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,OAAA;IAAAA,MAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAApB,SAAAC,QAAqBC,IAAI,EAAEC,KAAK;MAAA,IAAAC,OAAA;QAAAC,UAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,KAAA,GAAAX,SAAA;MAAA,OAAAE,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAET,OAAO,GAAAI,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YACtCH,UAAU,GAAG,IAAIW,eAAe,CAAC,CAAC;YAClCV,MAAM,GAAGjB,WAAW,CAACgB,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;YAAAK,QAAA,CAAAM,EAAA,GAC3C1B,GAAG;YAAAoB,QAAA,CAAAO,EAAA,GAAAC,aAAA;YAAAR,QAAA,CAAAS,EAAA;cACnBd,MAAM,EAANA,MAAM;cACNe,YAAY,EAAEjC,iBAAiB,CAAA+B,aAAA;gBAC7BG,GAAG,EAAEpB,IAAI;gBACTqB,cAAc,EAAE,IAAI;gBACpBC,KAAK,EAAEpB,OAAO,CAACU;cAAM,GAClBV,OAAO,CACX;YAAC;YAAAO,QAAA,CAAAE,IAAA;YAAA,OACO1B,gBAAgB,CAAC,CAAC;cACvBsC,OAAO,EAAEtB,KAAK;cACdD,IAAI,EAAE,KAAK;cACXwB,IAAI,EAAE1C,YAAY,CAACoB,OAAO,CAACsB,IAAI,CAAC;cAChCC,KAAK,EAAE1C,UAAU,CAACmB,OAAO,CAACuB,KAAK;YACjC,CAAC,CAAC,EAAEtB,UAAU,EAAED,OAAO,CAACwB,OAAO,CAAC;UAAA;YAAAjB,QAAA,CAAAkB,EAAA,GAAAlB,QAAA,CAAAmB,IAAA;YAAAnB,QAAA,CAAAoB,EAAA,OAAApB,QAAA,CAAAO,EAAA,EAAAP,QAAA,CAAAS,EAAA,EAAAT,QAAA,CAAAkB,EAAA;YAAAlB,QAAA,CAAAE,IAAA;YAAA,OAAAF,QAAA,CAAAM,EAAA,CAbde,IAAI,CAAAC,IAAA,CAAAtB,QAAA,CAAAM,EAAA,EAAC,aAAa,EAAAN,QAAA,CAAAoB,EAAA;UAAA;YAAlCxB,GAAG,GAAAI,QAAA,CAAAmB,IAAA;YAAAnB,QAAA,CAAAE,IAAA;YAAA,OAeHN,GAAG,CAAC2B,IAAI,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAvB,QAAA,CAAAwB,IAAA;QAAA;MAAA,GAAAlC,OAAA;IAAA,CACjB;IAAA,OAAAN,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOL,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}