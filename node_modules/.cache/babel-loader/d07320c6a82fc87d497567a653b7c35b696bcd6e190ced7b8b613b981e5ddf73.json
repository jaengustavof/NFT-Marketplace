{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport var createReplace = configure(function (api) {\n  var replace = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config) {\n      var options,\n        controller,\n        signal,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            controller = new AbortController();\n            signal = abortSignal(controller.signal, options.signal);\n            _context.t0 = api;\n            _context.t1 = _objectSpread;\n            _context.t2 = {\n              signal: signal,\n              searchParams: toUrlSearchParams(options)\n            };\n            _context.next = 8;\n            return multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers);\n          case 8:\n            _context.t3 = _context.sent;\n            _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n            _context.next = 12;\n            return _context.t0.post.call(_context.t0, 'config/replace', _context.t4);\n          case 12:\n            res = _context.sent;\n            _context.next = 15;\n            return res.text();\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function replace(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return replace;\n});","map":{"version":3,"names":["fromString","uint8ArrayFromString","multipartRequest","configure","toUrlSearchParams","abortSignal","createReplace","api","replace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","options","controller","signal","res","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","AbortController","t0","t1","_objectSpread","t2","searchParams","JSON","stringify","headers","t3","sent","t4","post","call","text","stop","_x","apply"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/config/replace.js"],"sourcesContent":["import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createReplace = configure(api => {\n  const replace = async (config, options = {}) => {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n    });\n    await res.text();\n  };\n  return replace;\n});"],"mappings":";;;AAAA,SAASA,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAC5E,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,IAAMC,aAAa,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAC5C,IAAMC,OAAO;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,MAAM;MAAA,IAAAC,OAAA;QAAAC,UAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,KAAA,GAAAC,SAAA;MAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEV,OAAO,GAAAI,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAG,CAAC,CAAC;YACnCH,UAAU,GAAG,IAAIY,eAAe,CAAC,CAAC;YAClCX,MAAM,GAAGZ,WAAW,CAACW,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;YAAAM,QAAA,CAAAM,EAAA,GAC3CtB,GAAG;YAAAgB,QAAA,CAAAO,EAAA,GAAAC,aAAA;YAAAR,QAAA,CAAAS,EAAA;cACnBf,MAAM,EAANA,MAAM;cACNgB,YAAY,EAAE7B,iBAAiB,CAACW,OAAO;YAAC;YAAAQ,QAAA,CAAAE,IAAA;YAAA,OAC/BvB,gBAAgB,CAAC,CAACD,oBAAoB,CAACiC,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC,CAAC,CAAC,EAAEE,UAAU,EAAED,OAAO,CAACqB,OAAO,CAAC;UAAA;YAAAb,QAAA,CAAAc,EAAA,GAAAd,QAAA,CAAAe,IAAA;YAAAf,QAAA,CAAAgB,EAAA,OAAAhB,QAAA,CAAAO,EAAA,EAAAP,QAAA,CAAAS,EAAA,EAAAT,QAAA,CAAAc,EAAA;YAAAd,QAAA,CAAAE,IAAA;YAAA,OAAAF,QAAA,CAAAM,EAAA,CAHlFW,IAAI,CAAAC,IAAA,CAAAlB,QAAA,CAAAM,EAAA,EAAC,gBAAgB,EAAAN,QAAA,CAAAgB,EAAA;UAAA;YAArCrB,GAAG,GAAAK,QAAA,CAAAe,IAAA;YAAAf,QAAA,CAAAE,IAAA;YAAA,OAKHP,GAAG,CAACwB,IAAI,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAnB,QAAA,CAAAoB,IAAA;QAAA;MAAA,GAAA9B,OAAA;IAAA,CACjB;IAAA,gBATKL,OAAOA,CAAAoC,EAAA;MAAA,OAAAnC,IAAA,CAAAoC,KAAA,OAAAzB,SAAA;IAAA;EAAA,GASZ;EACD,OAAOZ,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}