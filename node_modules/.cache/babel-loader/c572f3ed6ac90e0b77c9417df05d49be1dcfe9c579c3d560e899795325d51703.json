{"ast":null,"code":"import { modeToString } from './mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nexport function toUrlSearchParams() {\n  let {\n    arg,\n    searchParams,\n    hashAlg,\n    mtime,\n    mode,\n    ...options\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = `${options.timeout}ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}","map":{"version":3,"names":["modeToString","parseMtime","toUrlSearchParams","arg","searchParams","hashAlg","mtime","mode","options","arguments","length","undefined","hash","secs","mtimeNsecs","nsecs","timeout","isNaN","Array","isArray","urlSearchParams","URLSearchParams","forEach","append"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/to-url-search-params.js"],"sourcesContent":["import { modeToString } from './mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nexport function toUrlSearchParams({arg, searchParams, hashAlg, mtime, mode, ...options} = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = `${ options.timeout }ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAO,SAASC,iBAAiBA,CAAA,EAA6D;EAAA,IAA5D;IAACC,GAAG;IAAEC,YAAY;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAE,GAAGC;EAAO,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC1F,IAAIL,YAAY,EAAE;IAChBI,OAAO,GAAG;MACR,GAAGA,OAAO;MACV,GAAGJ;IACL,CAAC;EACH;EACA,IAAIC,OAAO,EAAE;IACXG,OAAO,CAACI,IAAI,GAAGP,OAAO;EACxB;EACA,IAAIC,KAAK,IAAI,IAAI,EAAE;IACjBA,KAAK,GAAGL,UAAU,CAACK,KAAK,CAAC;IACzBE,OAAO,CAACF,KAAK,GAAGA,KAAK,CAACO,IAAI;IAC1BL,OAAO,CAACM,UAAU,GAAGR,KAAK,CAACS,KAAK;EAClC;EACA,IAAIR,IAAI,IAAI,IAAI,EAAE;IAChBC,OAAO,CAACD,IAAI,GAAGP,YAAY,CAACO,IAAI,CAAC;EACnC;EACA,IAAIC,OAAO,CAACQ,OAAO,IAAI,CAACC,KAAK,CAACT,OAAO,CAACQ,OAAO,CAAC,EAAE;IAC9CR,OAAO,CAACQ,OAAO,GAAI,GAAGR,OAAO,CAACQ,OAAS,IAAG;EAC5C;EACA,IAAIb,GAAG,KAAKQ,SAAS,IAAIR,GAAG,KAAK,IAAI,EAAE;IACrCA,GAAG,GAAG,EAAE;EACV,CAAC,MAAM,IAAI,CAACe,KAAK,CAACC,OAAO,CAAChB,GAAG,CAAC,EAAE;IAC9BA,GAAG,GAAG,CAACA,GAAG,CAAC;EACb;EACA,MAAMiB,eAAe,GAAG,IAAIC,eAAe,CAACb,OAAO,CAAC;EACpDL,GAAG,CAACmB,OAAO,CAACnB,GAAG,IAAIiB,eAAe,CAACG,MAAM,CAAC,KAAK,EAAEpB,GAAG,CAAC,CAAC;EACtD,OAAOiB,eAAe;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}