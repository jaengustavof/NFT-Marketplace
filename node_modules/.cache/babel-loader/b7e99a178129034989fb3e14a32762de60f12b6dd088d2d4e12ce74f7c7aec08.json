{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createAddAll = configure(function (api) {\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator(function (source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, path, recursive, metadata, res, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, pin, _iterator3, _step3, cid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(normaliseInput(source));\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 62;\n                break;\n              }\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive, metadata = _step$value.metadata;\n              _context.next = 10;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n            case 10:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 13;\n              _iterator2 = _asyncIterator(res.ndjson());\n            case 15:\n              _context.next = 17;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 17:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 43;\n                break;\n              }\n              pin = _step2.value;\n              if (!pin.Pins) {\n                _context.next = 38;\n                break;\n              }\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 21;\n              _iterator3.s();\n            case 23:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 29;\n                break;\n              }\n              cid = _step3.value;\n              _context.next = 27;\n              return CID.parse(cid);\n            case 27:\n              _context.next = 23;\n              break;\n            case 29:\n              _context.next = 34;\n              break;\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](21);\n              _iterator3.e(_context.t0);\n            case 34:\n              _context.prev = 34;\n              _iterator3.f();\n              return _context.finish(34);\n            case 37:\n              return _context.abrupt(\"continue\", 40);\n            case 38:\n              _context.next = 40;\n              return CID.parse(pin);\n            case 40:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 15;\n              break;\n            case 43:\n              _context.next = 49;\n              break;\n            case 45:\n              _context.prev = 45;\n              _context.t1 = _context[\"catch\"](13);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n            case 49:\n              _context.prev = 49;\n              _context.prev = 50;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 54;\n                break;\n              }\n              _context.next = 54;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 54:\n              _context.prev = 54;\n              if (!_didIteratorError2) {\n                _context.next = 57;\n                break;\n              }\n              throw _iteratorError2;\n            case 57:\n              return _context.finish(54);\n            case 58:\n              return _context.finish(49);\n            case 59:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n            case 62:\n              _context.next = 68;\n              break;\n            case 64:\n              _context.prev = 64;\n              _context.t2 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n            case 68:\n              _context.prev = 68;\n              _context.prev = 69;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 73;\n                break;\n              }\n              _context.next = 73;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 73:\n              _context.prev = 73;\n              if (!_didIteratorError) {\n                _context.next = 76;\n                break;\n              }\n              throw _iteratorError;\n            case 76:\n              return _context.finish(73);\n            case 77:\n              return _context.finish(68);\n            case 78:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 64, 68, 78], [13, 45, 49, 59], [21, 31, 34, 37], [50,, 54, 58], [69,, 73, 77]]);\n      })();\n    });\n    return _addAll.apply(this, arguments);\n  }\n  return addAll;\n});","map":{"version":3,"names":["CID","configure","normaliseInput","toUrlSearchParams","createAddAll","api","addAll","_x","_addAll","apply","arguments","_wrapAsyncGenerator","source","options","length","undefined","_regeneratorRuntime","mark","_callee","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","path","recursive","metadata","res","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","pin","_iterator3","_step3","cid","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","post","signal","searchParams","_objectSpread","arg","JSON","stringify","stream","headers","ndjson","Pins","_createForOfIteratorHelper","s","n","parse","t0","e","f","finish","abrupt","t1","return","t2","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/add-all.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createAddAll = configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {path, recursive, metadata} of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid);\n          }\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}