{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nexport default function MyPurchases(_ref) {\n  _s();\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n  const loadPurchasedItems = async () => {\n    const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n    /*\n        event Bought(\n            uint itemId,\n            address indexed nft,\n            uint tokenId, \n            uint price,\n            address indexed seller,\n            address indexed buyer  <----- solo nos importa que nos filtre por el buyer, por eso enviamos null en todos los campos\n        );\n    */\n\n    const results = await marketplace.queryFilter(filter);\n    const purchases = await Promise.all(results.map(async i => {\n      i = i.args;\n      const uri = await nft.tokenURI(i.tokenId);\n      const response = await fetch(uri);\n      const metadata = response.json();\n      const totalPrice = await marketplace.getTotalPrice(i.itemId);\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: metadata.image\n      };\n      return purchasedItem;\n    }));\n    setLoading(false);\n    setPurchases(purchases);\n  };\n}\n_s(MyPurchases, \"l8vhXSljhiCOKLgw2TGIPn3Stqc=\");\n_c = MyPurchases;\nvar _c;\n$RefreshReg$(_c, \"MyPurchases\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","MyPurchases","_ref","_s","marketplace","nft","account","loading","setLoading","purchases","setPurchases","loadPurchasedItems","filter","filters","Bought","results","queryFilter","Promise","all","map","i","args","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","purchasedItem","price","name","description","image","_c","$RefreshReg$"],"sources":["/home/gustavo/blockchain/Marketplace/src/frontend/components/MyPurchases.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nexport default function MyPurchases({marketplace, nft, account}){\n\n    const [loading, setLoading ] = useState(true);\n    const [purchases, setPurchases] = useState([]);\n    const loadPurchasedItems = async () => {\n        const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n        /*\n            event Bought(\n                uint itemId,\n                address indexed nft,\n                uint tokenId, \n                uint price,\n                address indexed seller,\n                address indexed buyer  <----- solo nos importa que nos filtre por el buyer, por eso enviamos null en todos los campos\n            );\n        */\n\n        const results = await marketplace.queryFilter(filter); \n        const purchases = await Promise.all(results.map(async i => {\n            i = i.args;\n            const uri = await nft.tokenURI(i.tokenId);\n            const response = await fetch(uri);\n            const metadata = response.json();\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\n            let purchasedItem = {\n                totalPrice,\n                price: i.price,\n                itemId: i.itemId,\n                name: metadata.name,\n                description: metadata.description,\n                image: metadata.image\n            }\n\n            return purchasedItem;\n        }))\n\n        setLoading(false);\n        setPurchases(purchases)\n    }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAEhD,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAACC,WAAW;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EAE3D,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAE,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,MAAM,GAAGR,WAAW,CAACS,OAAO,CAACC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAER,OAAO,CAAC;IAChF;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQ,MAAMS,OAAO,GAAG,MAAMX,WAAW,CAACY,WAAW,CAACJ,MAAM,CAAC;IACrD,MAAMH,SAAS,GAAG,MAAMQ,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,GAAG,CAAC,MAAMC,CAAC,IAAI;MACvDA,CAAC,GAAGA,CAAC,CAACC,IAAI;MACV,MAAMC,GAAG,GAAG,MAAMjB,GAAG,CAACkB,QAAQ,CAACH,CAAC,CAACI,OAAO,CAAC;MACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MACjC,MAAMK,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAChC,MAAMC,UAAU,GAAG,MAAMzB,WAAW,CAAC0B,aAAa,CAACV,CAAC,CAACW,MAAM,CAAC;MAC5D,IAAIC,aAAa,GAAG;QAChBH,UAAU;QACVI,KAAK,EAAEb,CAAC,CAACa,KAAK;QACdF,MAAM,EAAEX,CAAC,CAACW,MAAM;QAChBG,IAAI,EAAEP,QAAQ,CAACO,IAAI;QACnBC,WAAW,EAAER,QAAQ,CAACQ,WAAW;QACjCC,KAAK,EAAET,QAAQ,CAACS;MACpB,CAAC;MAED,OAAOJ,aAAa;IACxB,CAAC,CAAC,CAAC;IAEHxB,UAAU,CAAC,KAAK,CAAC;IACjBE,YAAY,CAACD,SAAS,CAAC;EAC3B,CAAC;AACL;AAACN,EAAA,CAvCuBF,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}