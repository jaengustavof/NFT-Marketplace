{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from 'ethers';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nconst Home = _ref => {\n  _s();\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n  const loadMarketPlaceItems = async () => {\n    const itemCount = await marketplace.itemCount();\n    let items = [];\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i);\n      if (!item.sold) {\n        const uri = await nft.tokenURI(item.tokenId);\n        const response = await fetch(URI);\n        const metadata = await response.json();\n        const totalPrice = await marketplace.getTotalPrice(item.itemId);\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: metadata.image\n        });\n      }\n    }\n  };\n};\n_s(Home, \"iHvstJckLG5LwIS1eFxNFhXopSA=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","Button","Home","_ref","_s","marketplace","nft","loading","setLoading","items","setItems","loadMarketPlaceItems","itemCount","i","item","sold","uri","tokenURI","tokenId","response","fetch","URI","metadata","json","totalPrice","getTotalPrice","itemId","push","seller","name","description","image","_c","$RefreshReg$"],"sources":["/home/gustavo/blockchain/Marketplace/src/frontend/components/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ethers } from 'ethers';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\n\nconst Home = ({marketplace, nft}) =>{\n    const [loading, setLoading] = useState(true);\n    const [items, setItems] = useState([]);\n    const loadMarketPlaceItems = async () => {\n        const itemCount = await marketplace.itemCount();\n        let items = [];\n        for (let i = 1; i<= itemCount; i++){\n            const item = await marketplace.items(i);\n            if(!item.sold) {\n                const uri = await nft.tokenURI(item.tokenId);\n                const response = await fetch(URI);\n                const metadata = await response.json();\n                const totalPrice = await marketplace.getTotalPrice(item.itemId);\n                items.push({\n                    totalPrice,\n                    itemId: item.itemId,\n                    seller: item.seller,\n                    name: metadata.name,\n                    description: metadata.description,\n                    image: metadata.image\n                })\n            }\n        }\n    }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAExD,MAAMC,IAAI,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,WAAW;IAAEC;EAAG,CAAC,GAAAH,IAAA;EAC5B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,SAAS,GAAG,MAAMP,WAAW,CAACO,SAAS,CAAC,CAAC;IAC/C,IAAIH,KAAK,GAAG,EAAE;IACd,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAGD,SAAS,EAAEC,CAAC,EAAE,EAAC;MAC/B,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACI,KAAK,CAACI,CAAC,CAAC;MACvC,IAAG,CAACC,IAAI,CAACC,IAAI,EAAE;QACX,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC;QAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC;QACjC,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACtC,MAAMC,UAAU,GAAG,MAAMnB,WAAW,CAACoB,aAAa,CAACX,IAAI,CAACY,MAAM,CAAC;QAC/DjB,KAAK,CAACkB,IAAI,CAAC;UACPH,UAAU;UACVE,MAAM,EAAEZ,IAAI,CAACY,MAAM;UACnBE,MAAM,EAAEd,IAAI,CAACc,MAAM;UACnBC,IAAI,EAAEP,QAAQ,CAACO,IAAI;UACnBC,WAAW,EAAER,QAAQ,CAACQ,WAAW;UACjCC,KAAK,EAAET,QAAQ,CAACS;QACpB,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;AACL,CAAC;AAAA3B,EAAA,CAxBKF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}