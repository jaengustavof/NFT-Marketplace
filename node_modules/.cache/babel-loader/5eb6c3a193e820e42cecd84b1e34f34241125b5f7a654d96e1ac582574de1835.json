{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  var pin = {\n    type: type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport var createLs = configure(function (api) {\n  function ls() {\n    return _ls.apply(this, arguments);\n  }\n  function _ls() {\n    _ls = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var paths, res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, pin, _i, _Object$keys, cid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              paths = [];\n              if (options.paths) {\n                paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n              }\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('pin/ls', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: paths.map(function (path) {\n                    return \"\".concat(path);\n                  }),\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n            case 4:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 7;\n              _iterator = _asyncIterator(res.ndjson());\n            case 9:\n              _context.next = 11;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 11:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 28;\n                break;\n              }\n              pin = _step.value;\n              if (!pin.Keys) {\n                _context.next = 23;\n                break;\n              }\n              _i = 0, _Object$keys = Object.keys(pin.Keys);\n            case 15:\n              if (!(_i < _Object$keys.length)) {\n                _context.next = 22;\n                break;\n              }\n              cid = _Object$keys[_i];\n              _context.next = 19;\n              return toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n            case 19:\n              _i++;\n              _context.next = 15;\n              break;\n            case 22:\n              return _context.abrupt(\"return\");\n            case 23:\n              _context.next = 25;\n              return toPin(pin.Type, pin.Cid, pin.Metadata);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context.next = 9;\n              break;\n            case 28:\n              _context.next = 34;\n              break;\n            case 30:\n              _context.prev = 30;\n              _context.t0 = _context[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 39:\n              _context.prev = 39;\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context.finish(39);\n            case 43:\n              return _context.finish(34);\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[7, 30, 34, 44], [35,, 39, 43]]);\n      })();\n    });\n    return _ls.apply(this, arguments);\n  }\n  return ls;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","toPin","type","cid","metadata","pin","parse","createLs","api","ls","_ls","apply","arguments","_wrapAsyncGenerator","options","length","undefined","_regeneratorRuntime","mark","_callee","paths","res","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_i","_Object$keys","wrap","_callee$","_context","prev","next","Array","isArray","_awaitAsyncGenerator","post","signal","searchParams","_objectSpread","arg","map","path","concat","stream","headers","sent","_asyncIterator","ndjson","done","value","Keys","Object","keys","Type","Metadata","abrupt","Cid","t0","return","finish","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/ls.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport const createLs = configure(api => {\n  async function* ls(options = {}) {\n    let paths = [];\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n    }\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${ path }`),\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) {\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n        }\n        return;\n      }\n      yield toPin(pin.Type, pin.Cid, pin.Metadata);\n    }\n  }\n  return ls;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}