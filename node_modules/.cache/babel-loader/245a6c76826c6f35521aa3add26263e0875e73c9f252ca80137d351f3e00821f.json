{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { objectToCamel } from './lib/object-to-camel.js';\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport var createId = configure(function (api) {\n  function id() {\n    return _id.apply(this, arguments);\n  }\n  function _id() {\n    _id = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        data,\n        output,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('id', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: options.peerId ? options.peerId.toString() : undefined\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            output = _objectSpread({}, objectToCamel(data));\n            if (output.addresses) {\n              output.addresses = output.addresses.map(function (ma) {\n                return new Multiaddr(ma);\n              });\n            }\n            return _context.abrupt(\"return\", output);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _id.apply(this, arguments);\n  }\n  return id;\n});","map":{"version":3,"names":["objectToCamel","Multiaddr","configure","toUrlSearchParams","createId","api","id","_id","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","res","data","output","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","arg","peerId","toString","headers","sent","json","addresses","map","ma","abrupt","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/id.js"],"sourcesContent":["import { objectToCamel } from './lib/object-to-camel.js';\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createId = configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel(data) };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAAA,SACxBC,EAAEA,CAAA;IAAA,OAAAC,GAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,IAAA;IAAAA,GAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAjB,SAAAC,QAAA;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAkBT,OAAO,GAAAI,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACVlB,GAAG,CAACqB,IAAI,CAAC,IAAI,EAAE;cAC/BC,MAAM,EAAEb,OAAO,CAACa,MAAM;cACtBC,YAAY,EAAEzB,iBAAiB,CAAA0B,aAAA;gBAC7BC,GAAG,EAAEhB,OAAO,CAACiB,MAAM,GAAGjB,OAAO,CAACiB,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGP;cAAS,GACxDX,OAAO,CACX,CAAC;cACFmB,OAAO,EAAEnB,OAAO,CAACmB;YACnB,CAAC,CAAC;UAAA;YAPIlB,GAAG,GAAAM,QAAA,CAAAa,IAAA;YAAAb,QAAA,CAAAE,IAAA;YAAA,OAQUR,GAAG,CAACoB,IAAI,CAAC,CAAC;UAAA;YAAvBnB,IAAI,GAAAK,QAAA,CAAAa,IAAA;YACJjB,MAAM,GAAAY,aAAA,KAAQ7B,aAAa,CAACgB,IAAI,CAAC;YACvC,IAAIC,MAAM,CAACmB,SAAS,EAAE;cACpBnB,MAAM,CAACmB,SAAS,GAAGnB,MAAM,CAACmB,SAAS,CAACC,GAAG,CAAC,UAAAC,EAAE;gBAAA,OAAI,IAAIrC,SAAS,CAACqC,EAAE,CAAC;cAAA,EAAC;YAClE;YAAC,OAAAjB,QAAA,CAAAkB,MAAA,WACMtB,MAAM;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAmB,IAAA;QAAA;MAAA,GAAA3B,OAAA;IAAA,CACd;IAAA,OAAAN,GAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOH,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}