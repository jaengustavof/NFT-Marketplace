{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createStat = configure(function (api) {\n  function stat(_x) {\n    return _stat.apply(this, arguments);\n  }\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('files/stat', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: path\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            data.WithLocality = data.WithLocality || false;\n            return _context.abrupt(\"return\", toCoreInterface(objectToCamelWithMetadata(data)));\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n  return stat;\n});\nfunction toCoreInterface(entry) {\n  entry.cid = CID.parse(entry.hash);\n  delete entry.hash;\n  return entry;\n}","map":{"version":3,"names":["CID","objectToCamelWithMetadata","configure","toUrlSearchParams","createStat","api","stat","_x","_stat","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","options","res","data","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","arg","headers","sent","json","WithLocality","abrupt","toCoreInterface","stop","entry","cid","parse","hash"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/files/stat.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    data.WithLocality = data.WithLocality || false;\n    return toCoreInterface(objectToCamelWithMetadata(data));\n  }\n  return stat;\n});\nfunction toCoreInterface(entry) {\n  entry.cid = CID.parse(entry.hash);\n  delete entry.hash;\n  return entry;\n}"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,yBAAyB,QAAQ,yCAAyC;AACnF,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,IAAMC,UAAU,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAAA,SAC1BC,IAAIA,CAAAC,EAAA;IAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,MAAA;IAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAnB,SAAAC,QAAoBC,IAAI;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAER,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OAClBnB,GAAG,CAACsB,IAAI,CAAC,YAAY,EAAE;cACvCC,MAAM,EAAEZ,OAAO,CAACY,MAAM;cACtBC,YAAY,EAAE1B,iBAAiB,CAAA2B,aAAA;gBAC7BC,GAAG,EAAEhB;cAAI,GACNC,OAAO,CACX,CAAC;cACFgB,OAAO,EAAEhB,OAAO,CAACgB;YACnB,CAAC,CAAC;UAAA;YAPIf,GAAG,GAAAK,QAAA,CAAAW,IAAA;YAAAX,QAAA,CAAAE,IAAA;YAAA,OAQUP,GAAG,CAACiB,IAAI,CAAC,CAAC;UAAA;YAAvBhB,IAAI,GAAAI,QAAA,CAAAW,IAAA;YACVf,IAAI,CAACiB,YAAY,GAAGjB,IAAI,CAACiB,YAAY,IAAI,KAAK;YAAC,OAAAb,QAAA,CAAAc,MAAA,WACxCC,eAAe,CAACpC,yBAAyB,CAACiB,IAAI,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAgB,IAAA;QAAA;MAAA,GAAAxB,OAAA;IAAA,CACxD;IAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOJ,IAAI;AACb,CAAC,CAAC;AACF,SAAS+B,eAAeA,CAACE,KAAK,EAAE;EAC9BA,KAAK,CAACC,GAAG,GAAGxC,GAAG,CAACyC,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;EACjC,OAAOH,KAAK,CAACG,IAAI;EACjB,OAAOH,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}