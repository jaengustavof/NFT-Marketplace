{"ast":null,"code":"import { Token, Type } from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nvar MINOR_FALSE = 20;\nvar MINOR_TRUE = 21;\nvar MINOR_NULL = 22;\nvar MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" undefined values are not supported\"));\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" indefinite length items not allowed\"));\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(\"\".concat(decodeErrPrefix, \" NaN values are not supported\"));\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(\"\".concat(decodeErrPrefix, \" Infinity values are not supported\"));\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  var float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    var decoded;\n    var success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  var float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    var decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nvar buffer = new ArrayBuffer(9);\nvar dataView = new DataView(buffer, 1);\nvar ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    var valu32 = dataView.getUint32(0);\n    var exponent = (valu32 & 2139095040) >> 23;\n    var mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      var logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" not enough data for float16\"));\n  }\n  var half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  var exp = half >> 10 & 31;\n  var mant = half & 1023;\n  var val;\n  if (exp === 0) {\n    val = mant * Math.pow(2, -24);\n  } else if (exp !== 31) {\n    val = (mant + 1024) * Math.pow(2, exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" not enough data for float32\"));\n  }\n  var offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" not enough data for float64\"));\n  }\n  var offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","map":{"version":3,"names":["Token","Type","decodeErrPrefix","encodeUint","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","_data","_pos","_minor","options","allowUndefined","Error","concat","coerceUndefinedToNull","null","undefined","decodeBreak","allowIndefinite","break","createToken","value","bytes","allowNaN","Number","isNaN","allowInfinity","Infinity","float","decodeFloat16","data","pos","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","buf","token","push","majorEncoded","decoded","success","float64","encodeFloat16","ui8a","slice","encodeFloat32","encodeFloat64","encodedSize","buffer","ArrayBuffer","dataView","DataView","Uint8Array","inp","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","length","half","NaN","exp","mant","val","Math","pow","offset","byteOffset","getFloat32","setFloat64","getFloat64","compareTokens"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/cborg/esm/lib/7float.js"],"sourcesContent":["import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}