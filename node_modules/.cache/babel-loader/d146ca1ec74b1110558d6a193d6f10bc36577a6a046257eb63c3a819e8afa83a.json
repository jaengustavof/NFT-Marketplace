{"ast":null,"code":"import _regeneratorRuntime from\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{ethers}from\"ethers\";import{Row,Form,Button}from'react-bootstrap';import{create as ipfsHttpClient}from'ipfs-http-client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var projectId='2SFSUpmPI68xGF8hJbufrqlW1vy';var projectSecret='a55e8b33848f8f0f0fe6046d9043eb1e';var credentials=projectId+':'+projectSecret;var encodedCredentials=btoa(credentials);var authHeader='Basic '+encodedCredentials;var client=ipfsHttpClient({host:'ipfs.infura.io',port:5001,protocol:'https',headers:{authorization:authHeader}});//nodo infura para conectar cliente IPFS\nvar Create=function Create(_ref){var marketplace=_ref.marketplace,nft=_ref.nft;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),price=_useState4[0],setPrice=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),description=_useState8[0],setDescription=_useState8[1];// project ID - 3ecd8f60e2a64f2188c95c9e4b485b05\n// Secret - cac499f33e78471f811a87be965f00e8\nvar uploadToIPFS=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var file,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();file=event.target.files[0];if(!(typeof file!=='undefined')){_context.next=15;break;}_context.prev=3;_context.next=6;return client.add(file);case 6:result=_context.sent;console.log(result);setImage(\"https://ipfs.infura.io/ipfs/\".concat(result.path));console.log(image);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](3);console.log(\"ipfs image upload error: \",_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[3,12]]);}));return function uploadToIPFS(_x){return _ref2.apply(this,arguments);};}();var createNFT=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var result;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(!image||!price||!name||!description)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:_context2.prev=2;_context2.next=5;return client.add(JSON.stringify({image:image,price:price,name:name,description:description}));case 5:result=_context2.sent;mintThenList(result);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);console.log(\"ipfs URI upload error: \",_context2.t0);case 12:case\"end\":return _context2.stop();}},_callee2,null,[[2,9]]);}));return function createNFT(){return _ref3.apply(this,arguments);};}();var mintThenList=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(result){var uri,id,listingPrice;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:console.log(result);uri=\"https://ipfs.infura.io/ipfs/\".concat(result.path);_context3.next=4;return nft.mint(uri);case 4:_context3.next=6;return _context3.sent.wait();case 6:_context3.next=8;return nft.tokenCount();case 8:id=_context3.sent;_context3.next=11;return nft.setApprovalForAll(marketplace.address,true);case 11:_context3.next=13;return _context3.sent;case 13:listingPrice=ethers.utils.parseEther(price.toString());_context3.next=16;return marketplace.makeItem(nft.address,id,listingPrice);case 16:_context3.next=18;return _context3.sent.wait();case 18:case\"end\":return _context3.stop();}},_callee3);}));return function mintThenList(_x2){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"main\",{role:\"main\",className:\"col-lg-12 mx-auto\",style:{maxWidth:\"1000px\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content mx-auto\",children:/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"file\",required:true,name:\"file\",onChange:uploadToIPFS}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(e){return setName(e.target.value);},size:\"lg\",required:true,type:\"text\",placeholder:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(e){return setDescription(e.target.value);},size:\"lg\",required:true,as:\"textarea\",placeholder:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(e){return setPrice(e.target.value);},size:\"lg\",required:true,type:\"numbre\",placeholder:\"Price (ETH)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"g-grid px-0\",children:/*#__PURE__*/_jsx(Button,{onClick:createNFT,variant:\"primary\",size:\"lg\",children:\"Create and list NFT\"})})]})})})})});};export default Create;","map":{"version":3,"names":["useState","ethers","Row","Form","Button","create","ipfsHttpClient","jsx","_jsx","jsxs","_jsxs","projectId","projectSecret","credentials","encodedCredentials","btoa","authHeader","client","host","port","protocol","headers","authorization","Create","_ref","marketplace","nft","_useState","_useState2","_slicedToArray","image","setImage","_useState3","_useState4","price","setPrice","_useState5","_useState6","name","setName","_useState7","_useState8","description","setDescription","uploadToIPFS","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","file","result","wrap","_callee$","_context","prev","next","preventDefault","target","files","add","sent","console","log","concat","path","t0","stop","_x","apply","arguments","createNFT","_ref3","_callee2","_callee2$","_context2","abrupt","JSON","stringify","mintThenList","_ref4","_callee3","uri","id","listingPrice","_callee3$","_context3","mint","wait","tokenCount","setApprovalForAll","address","utils","parseEther","toString","makeItem","_x2","className","children","role","style","maxWidth","Control","type","required","onChange","e","value","size","placeholder","as","onClick","variant"],"sources":["/home/gustavo/blockchain/Marketplace/src/frontend/components/Create.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Row, Form, Button } from 'react-bootstrap';\nimport { create as ipfsHttpClient } from 'ipfs-http-client';\n\nconst projectId = '2SFSUpmPI68xGF8hJbufrqlW1vy';\nconst projectSecret = 'a55e8b33848f8f0f0fe6046d9043eb1e';\nconst credentials = projectId + ':' + projectSecret;\nconst encodedCredentials = btoa(credentials);\nconst authHeader = 'Basic ' + encodedCredentials;\nconst client = ipfsHttpClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https', headers: {\n    authorization: authHeader}}); //nodo infura para conectar cliente IPFS\n\nconst Create = ({ marketplace, nft }) => {\n\n    const [image, setImage] = useState('');\n    const [price, setPrice] = useState(null);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    // project ID - 3ecd8f60e2a64f2188c95c9e4b485b05\n    // Secret - cac499f33e78471f811a87be965f00e8\n    const uploadToIPFS = async (event) =>{\n        event.preventDefault();\n        const file = event.target.files[0];\n        if(typeof file !== 'undefined') {\n            try {\n                const result = await client.add(file);\n                console.log(result);\n                setImage(`https://ipfs.infura.io/ipfs/${result.path}`);\n                console.log(image)\n            } catch (error) {\n                console.log(\"ipfs image upload error: \", error);\n                \n            }\n        }\n    }\n\n    const createNFT = async () => {\n        if(!image || !price || !name || !description) return;\n\n        try {\n\n            const result = await client.add(JSON.stringify({ image, price, name, description }));\n            mintThenList(result);\n\n        } catch (error) {\n            \n            console.log(\"ipfs URI upload error: \", error);\n\n        }\n    }\n\n    const mintThenList = async (result) =>{\n        console.log(result)\n        const uri = `https://ipfs.infura.io/ipfs/${result.path}`;\n        await (await nft.mint(uri)).wait();\n\n        const id = await nft.tokenCount();\n        await (await nft.setApprovalForAll(marketplace.address, true));\n\n        const listingPrice = ethers.utils.parseEther(price.toString());\n        await (await marketplace.makeItem(nft.address, id, listingPrice)).wait();\n    }\n\n    return (\n        <div className=\"container-fluid mt-5\">\n            <div className=\"row\">\n                <main role=\"main\" className=\"col-lg-12 mx-auto\" style={{ maxWidth: \"1000px\"}}>\n                    <div className=\"content mx-auto\">\n                        <Row className=\"g-4\">\n                            <Form.Control type=\"file\" required name=\"file\" onChange={uploadToIPFS} />\n                            <Form.Control onChange={(e) => setName(e.target.value)} size=\"lg\" required type=\"text\" placeholder=\"Name\" />\n                            <Form.Control onChange={(e) => setDescription(e.target.value)} size=\"lg\" required as=\"textarea\" placeholder=\"Description\" />\n                            <Form.Control onChange={(e) => setPrice(e.target.value)} size=\"lg\" required type=\"numbre\" placeholder=\"Price (ETH)\" />\n                            <div className=\"g-grid px-0\">\n                                <Button onClick={createNFT} variant=\"primary\" size=\"lg\">\n                                    Create and list NFT\n                                </Button>\n                            </div>\n                        </Row>\n                    </div>\n                </main>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Create;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}