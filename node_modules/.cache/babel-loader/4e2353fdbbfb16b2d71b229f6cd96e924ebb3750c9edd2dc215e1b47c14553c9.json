{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/blockchain/Marketplace/src/frontend/components/MyPurchases.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPurchases(_ref) {\n  _s();\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n  const loadPurchasedItems = async () => {\n    const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n    /*\n        event Bought(\n            uint itemId,\n            address indexed nft,\n            uint tokenId, \n            uint price,\n            address indexed seller,\n            address indexed buyer  <----- solo nos importa que nos filtre por el buyer, por eso enviamos null en todos los campos\n        );\n    */\n\n    const results = await marketplace.queryFilter(filter);\n    const purchases = await Promise.all(results.map(async i => {\n      i = i.args;\n      const uri = await nft.tokenURI(i.tokenId);\n      const response = await fetch(uri);\n      const metadata = response.json();\n      const totalPrice = await marketplace.getTotalPrice(i.itemId);\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: metadata.image\n      };\n      return purchasedItem;\n    }));\n    setLoading(false);\n    setPurchases(purchases);\n  };\n  useEffect(() => {\n    loadPurchasedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1ren 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: purchases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-3 container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-3\",\n        children: purchases.map((item, idx) => {\n          /*#__PURE__*/_jsxDEV(Col, {\n            className: \"overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), soldItems.length > 0 && renderSoldItems(soldItems)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPurchases, \"19vq4d40IZrZZBP/cQlz8B6/yMY=\");\n_c = MyPurchases;\nvar _c;\n$RefreshReg$(_c, \"MyPurchases\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","jsxDEV","_jsxDEV","MyPurchases","_ref","_s","marketplace","nft","account","loading","setLoading","purchases","setPurchases","loadPurchasedItems","filter","filters","Bought","results","queryFilter","Promise","all","map","i","args","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","purchasedItem","price","name","description","image","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","xs","md","lg","item","idx","Img","variant","src","Footer","utils","formatEther","soldItems","renderSoldItems","_c","$RefreshReg$"],"sources":["/home/gustavo/blockchain/Marketplace/src/frontend/components/MyPurchases.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nexport default function MyPurchases({marketplace, nft, account}){\n\n    const [loading, setLoading ] = useState(true);\n    const [purchases, setPurchases] = useState([]);\n    const loadPurchasedItems = async () => {\n        const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n        /*\n            event Bought(\n                uint itemId,\n                address indexed nft,\n                uint tokenId, \n                uint price,\n                address indexed seller,\n                address indexed buyer  <----- solo nos importa que nos filtre por el buyer, por eso enviamos null en todos los campos\n            );\n        */\n\n        const results = await marketplace.queryFilter(filter); \n        const purchases = await Promise.all(results.map(async i => {\n            i = i.args;\n            const uri = await nft.tokenURI(i.tokenId);\n            const response = await fetch(uri);\n            const metadata = response.json();\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\n            let purchasedItem = {\n                totalPrice,\n                price: i.price,\n                itemId: i.itemId,\n                name: metadata.name,\n                description: metadata.description,\n                image: metadata.image\n            }\n\n            return purchasedItem;\n        }))\n\n        setLoading(false);\n        setPurchases(purchases)\n    }\n\n    useEffect(() =>{\n        loadPurchasedItems();\n\n    }, []);\n\n    if(loading) return (\n        <main style={{ padding: \"1ren 0\"}}>\n            <h2>Loading ...</h2>\n        </main>\n    );\n\n    return (\n        <div className='flex justify-center'>\n            {purchases.length > 0 ? \n                <div className='px-5 py-3 container'>\n                    <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n                        {purchases.map((item, idx) => {\n                            <Col key={idx} className='overflow-hidden'>\n                                <Card>\n                                    <Card.Img variant=\"top\" src={item.image}/>\n                                    <Card.Footer>\n                                        {ethers.utils.formatEther(item.totalPrice)} ETH\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        })}\n                    </Row>\n                    \n                    {soldItems.length > 0 && renderSoldItems(soldItems)} \n\n                </div>\n            : (\n                <main style={{ padding: \"1rem 0\"}}>\n                    <h2>No Assets</h2>\n                </main>\n\n            )}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}