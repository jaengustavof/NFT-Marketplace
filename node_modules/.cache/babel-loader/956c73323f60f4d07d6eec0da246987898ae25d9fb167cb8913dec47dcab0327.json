{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport var decodePin = function decodePin(_ref) {\n  var name = _ref.Name,\n    status = _ref.Status,\n    cid = _ref.Cid;\n  return {\n    cid: CID.parse(cid),\n    name: name,\n    status: status\n  };\n};\nexport var encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport var encodeCID = function encodeCID(cid) {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid));\n  }\n};\nexport var encodeQuery = function encodeQuery(_ref2) {\n  var service = _ref2.service,\n    cid = _ref2.cid,\n    name = _ref2.name,\n    status = _ref2.status,\n    all = _ref2.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    var _iterator = _createForOfIteratorHelper(cid),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  if (status) {\n    var _iterator2 = _createForOfIteratorHelper(status),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return query;\n};\nexport var encodeAddParams = function encodeAddParams(_ref3) {\n  var cid = _ref3.cid,\n    service = _ref3.service,\n    background = _ref3.background,\n    name = _ref3.name,\n    origins = _ref3.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    var _iterator3 = _createForOfIteratorHelper(origins),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var origin = _step3.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  return params;\n};","map":{"version":3,"names":["CID","toUrlSearchParams","decodePin","_ref","name","Name","status","Status","cid","Cid","parse","encodeService","service","TypeError","encodeCID","asCID","toString","concat","encodeQuery","_ref2","all","query","force","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","append","err","e","f","_iterator2","_step2","encodeAddParams","_ref3","background","origins","params","arg","_iterator3","_step3","origin"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/pin/remote/utils.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid }`);\n  }\n};\nexport const encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}