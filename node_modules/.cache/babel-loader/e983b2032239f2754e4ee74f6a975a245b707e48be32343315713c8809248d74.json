{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _awaitAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport function resolve(_x, _x2, _x3, _x4, _x5) {\n  return _resolve.apply(this, arguments);\n}\nfunction _resolve() {\n  _resolve = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(cid, path, codecs, getBlock, options) {\n    var load, parts, value, lastCid, key, _cid;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          load = /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n              var codec, block;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return codecs.getCodec(cid.code);\n                  case 2:\n                    codec = _context.sent;\n                    _context.next = 5;\n                    return getBlock(cid, options);\n                  case 5:\n                    block = _context.sent;\n                    return _context.abrupt(\"return\", codec.decode(block));\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function load(_x6) {\n              return _ref.apply(this, arguments);\n            };\n          }();\n          parts = path.split('/').filter(Boolean);\n          _context2.next = 4;\n          return _awaitAsyncGenerator(load(cid));\n        case 4:\n          value = _context2.sent;\n          lastCid = cid;\n        case 6:\n          if (!parts.length) {\n            _context2.next = 25;\n            break;\n          }\n          key = parts.shift();\n          if (key) {\n            _context2.next = 10;\n            break;\n          }\n          throw errCode(new Error(\"Could not resolve path \\\"\".concat(path, \"\\\"\")), 'ERR_INVALID_PATH');\n        case 10:\n          if (!Object.prototype.hasOwnProperty.call(value, key)) {\n            _context2.next = 16;\n            break;\n          }\n          value = value[key];\n          _context2.next = 14;\n          return {\n            value: value,\n            remainderPath: parts.join('/')\n          };\n        case 14:\n          _context2.next = 17;\n          break;\n        case 16:\n          throw errCode(new Error(\"no link named \\\"\".concat(key, \"\\\" under \").concat(lastCid)), 'ERR_NO_LINK');\n        case 17:\n          _cid = CID.asCID(value);\n          if (!_cid) {\n            _context2.next = 23;\n            break;\n          }\n          lastCid = _cid;\n          _context2.next = 22;\n          return _awaitAsyncGenerator(load(value));\n        case 22:\n          value = _context2.sent;\n        case 23:\n          _context2.next = 6;\n          break;\n        case 25:\n          _context2.next = 27;\n          return {\n            value: value,\n            remainderPath: ''\n          };\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _resolve.apply(this, arguments);\n}","map":{"version":3,"names":["CID","errCode","resolve","_x","_x2","_x3","_x4","_x5","_resolve","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee2","cid","path","codecs","getBlock","options","load","parts","value","lastCid","key","_cid","wrap","_callee2$","_context2","prev","next","_ref","_asyncToGenerator","_callee","codec","block","_callee$","_context","getCodec","code","sent","abrupt","decode","stop","_x6","split","filter","Boolean","_awaitAsyncGenerator","length","shift","Error","concat","Object","prototype","hasOwnProperty","call","remainderPath","join","asCID"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/lib/resolve.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport async function* resolve(cid, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    const cid = CID.asCID(value);\n    if (cid) {\n      lastCid = cid;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}