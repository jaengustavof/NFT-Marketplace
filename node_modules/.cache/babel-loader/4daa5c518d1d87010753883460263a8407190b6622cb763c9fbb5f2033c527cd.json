{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createStat","api","stat","options","arguments","length","undefined","res","post","searchParams","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","parse","peers","Peers","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/bitswap/stat.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;EACzC,eAAeC,IAAIA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC9B,MAAMG,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,cAAc,EAAE;MACzCC,YAAY,EAAEV,iBAAiB,CAACI,OAAO,CAAC;MACxCO,MAAM,EAAEP,OAAO,CAACO,MAAM;MACtBC,OAAO,EAAER,OAAO,CAACQ;IACnB,CAAC,CAAC;IACF,OAAOC,eAAe,CAAC,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC;EAC1C;EACA,OAAOX,IAAI;AACb,CAAC,CAAC;AACF,SAASU,eAAeA,CAACL,GAAG,EAAE;EAC5B,OAAO;IACLO,aAAa,EAAEP,GAAG,CAACQ,aAAa;IAChCC,QAAQ,EAAE,CAACT,GAAG,CAACU,QAAQ,IAAI,EAAE,EAAEC,GAAG,CAACC,CAAC,IAAItB,GAAG,CAACuB,KAAK,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1DE,KAAK,EAAEd,GAAG,CAACe,KAAK,IAAI,EAAE;IACtBC,cAAc,EAAEC,MAAM,CAACjB,GAAG,CAACkB,cAAc,CAAC;IAC1CC,YAAY,EAAEF,MAAM,CAACjB,GAAG,CAACoB,YAAY,CAAC;IACtCC,UAAU,EAAEJ,MAAM,CAACjB,GAAG,CAACsB,UAAU,CAAC;IAClCC,QAAQ,EAAEN,MAAM,CAACjB,GAAG,CAACwB,QAAQ,CAAC;IAC9BC,eAAe,EAAER,MAAM,CAACjB,GAAG,CAAC0B,eAAe,CAAC;IAC5CC,eAAe,EAAEV,MAAM,CAACjB,GAAG,CAAC4B,eAAe;EAC7C,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}