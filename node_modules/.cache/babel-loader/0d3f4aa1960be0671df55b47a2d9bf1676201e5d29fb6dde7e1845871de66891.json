{"ast":null,"code":"import _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport function multipartRequest(_x, _x2) {\n  return _multipartRequest.apply(this, arguments);\n}\nfunction _multipartRequest() {\n  _multipartRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, abortController) {\n    var headers,\n      parts,\n      formData,\n      index,\n      total,\n      _iteratorAbruptCompletion,\n      _didIteratorError,\n      _iteratorError,\n      _iterator,\n      _step,\n      _step$value,\n      content,\n      path,\n      mode,\n      mtime,\n      fileSuffix,\n      type,\n      fieldName,\n      qs,\n      secs,\n      nsecs,\n      end,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n          parts = [];\n          formData = new FormData();\n          index = 0;\n          total = 0;\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 7;\n          _iterator = _asyncIterator(normaliseInput(source));\n        case 9:\n          _context.next = 11;\n          return _iterator.next();\n        case 11:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 37;\n            break;\n          }\n          _step$value = _step.value, content = _step$value.content, path = _step$value.path, mode = _step$value.mode, mtime = _step$value.mtime;\n          fileSuffix = '';\n          type = content ? 'file' : 'dir';\n          if (index > 0) {\n            fileSuffix = \"-\".concat(index);\n          }\n          fieldName = type + fileSuffix;\n          qs = [];\n          if (mode !== null && mode !== undefined) {\n            qs.push(\"mode=\".concat(modeToString(mode)));\n          }\n          if (mtime != null) {\n            secs = mtime.secs, nsecs = mtime.nsecs;\n            qs.push(\"mtime=\".concat(secs));\n            if (nsecs != null) {\n              qs.push(\"mtime-nsecs=\".concat(nsecs));\n            }\n          }\n          if (qs.length) {\n            fieldName = \"\".concat(fieldName, \"?\").concat(qs.join('&'));\n          }\n          if (!content) {\n            _context.next = 28;\n            break;\n          }\n          formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n          end = total + content.size;\n          parts.push({\n            name: path,\n            start: total,\n            end: end\n          });\n          total = end;\n          _context.next = 33;\n          break;\n        case 28:\n          if (!(path != null)) {\n            _context.next = 32;\n            break;\n          }\n          formData.set(fieldName, new File([''], encodeURIComponent(path), {\n            type: 'application/x-directory'\n          }));\n          _context.next = 33;\n          break;\n        case 32:\n          throw new Error('path or content or both must be set');\n        case 33:\n          index++;\n        case 34:\n          _iteratorAbruptCompletion = false;\n          _context.next = 9;\n          break;\n        case 37:\n          _context.next = 43;\n          break;\n        case 39:\n          _context.prev = 39;\n          _context.t0 = _context[\"catch\"](7);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 43:\n          _context.prev = 43;\n          _context.prev = 44;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 48;\n            break;\n          }\n          _context.next = 48;\n          return _iterator.return();\n        case 48:\n          _context.prev = 48;\n          if (!_didIteratorError) {\n            _context.next = 51;\n            break;\n          }\n          throw _iteratorError;\n        case 51:\n          return _context.finish(48);\n        case 52:\n          return _context.finish(43);\n        case 53:\n          return _context.abrupt(\"return\", {\n            total: total,\n            parts: parts,\n            headers: headers,\n            body: formData\n          });\n        case 54:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[7, 39, 43, 53], [44,, 48, 52]]);\n  }));\n  return _multipartRequest.apply(this, arguments);\n}","map":{"version":3,"names":["normaliseInput","modeToString","multipartRequest","_x","_x2","_multipartRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","source","abortController","headers","parts","formData","index","total","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","content","path","mode","mtime","fileSuffix","type","fieldName","qs","secs","nsecs","end","_args","wrap","_callee$","_context","prev","next","length","undefined","FormData","_asyncIterator","sent","done","value","concat","push","join","set","encodeURIComponent","size","name","start","File","Error","t0","return","finish","abrupt","body","stop"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-core-utils/esm/src/multipart-request.browser.js"],"sourcesContent":["import { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport async function multipartRequest(source, abortController, headers = {}) {\n  const parts = [];\n  const formData = new FormData();\n  let index = 0;\n  let total = 0;\n  for await (const {content, path, mode, mtime} of normaliseInput(source)) {\n    let fileSuffix = '';\n    const type = content ? 'file' : 'dir';\n    if (index > 0) {\n      fileSuffix = `-${ index }`;\n    }\n    let fieldName = type + fileSuffix;\n    const qs = [];\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${ modeToString(mode) }`);\n    }\n    if (mtime != null) {\n      const {secs, nsecs} = mtime;\n      qs.push(`mtime=${ secs }`);\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${ nsecs }`);\n      }\n    }\n    if (qs.length) {\n      fieldName = `${ fieldName }?${ qs.join('&') }`;\n    }\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n      const end = total + content.size;\n      parts.push({\n        name: path,\n        start: total,\n        end\n      });\n      total = end;\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }));\n    } else {\n      throw new Error('path or content or both must be set');\n    }\n    index++;\n  }\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}