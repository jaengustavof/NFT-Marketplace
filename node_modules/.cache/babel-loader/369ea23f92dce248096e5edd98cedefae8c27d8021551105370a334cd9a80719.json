{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  function get(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const opts = {\n          arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n          ...options\n        };\n        if (opts.compressionLevel) {\n          opts['compression-level'] = opts.compressionLevel;\n          delete opts.compressionLevel;\n        }\n        const res = await api.post('get', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams(opts),\n          headers: options.headers\n        });\n        yield* res.iterator();\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return get;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createGet","api","get","path","options","arguments","length","undefined","opts","arg","Uint8Array","decode","compressionLevel","res","post","signal","searchParams","headers","iterator","e","Promise","reject"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-http-client/esm/src/get.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function* get(path, options = {}) {\n    const opts = {\n      arg: `${ path instanceof Uint8Array ? CID.decode(path) : path }`,\n      ...options\n    };\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel;\n      delete opts.compressionLevel;\n    }\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return get;\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;EACxC,SAAgBC,GAAGA,CAACC,IAAI;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QACtC,MAAMG,IAAI,GAAG;UACXC,GAAG,EAAG,GAAGN,IAAI,YAAYO,UAAU,GAAGb,GAAG,CAACc,MAAM,CAACR,IAAI,CAAC,GAAGA,IAAM,EAAC;UAChE,GAAGC;QACL,CAAC;QACD,IAAII,IAAI,CAACI,gBAAgB,EAAE;UACzBJ,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAACI,gBAAgB;UACjD,OAAOJ,IAAI,CAACI,gBAAgB;QAC9B;QACA,MAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,KAAK,EAAE;UAChCC,MAAM,EAAEX,OAAO,CAACW,MAAM;UACtBC,YAAY,EAAEjB,iBAAiB,CAACS,IAAI,CAAC;UACrCS,OAAO,EAAEb,OAAO,CAACa;QACnB,CAAC,CAAC;QACF,OAAOJ,GAAG,CAACK,QAAQ,CAAC,CAAC;MACvB,CAAC;IAAA,SAAAC,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOjB,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}