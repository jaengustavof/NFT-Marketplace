{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/blockchain/Marketplace/src/frontend/components/MyListedItems.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction renderSoldItems(items) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 4,\n      className: \"g-4 py-3\",\n      children: items.map((item, idx) => {\n        /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [\"For \", ethers.utils.formatEther(item.totalPrice), \" ETH - Received \", ethers.utils.formatEther(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\nexport default function MylistedItems(_ref) {\n  _s();\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n  const [soldItems, setSoldItems] = useState([]);\n  const loadListedItems = async () => {\n    const itemCount = marketplace.itemCount();\n    let listedItems = [];\n    let soldItems = [];\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx);\n      if (i.seller.toLowercase() === account) {\n        //para saber si el nft ha sido vendido por nosotros (lo comparamos con el account)\n        const uri = await nft.tokenUri(i.tokenId);\n      }\n    }\n  };\n}\n_s(MylistedItems, \"T3CY/4SQ7ZXOJO2v+E8tTeDxgRA=\");\n_c = MylistedItems;\nvar _c;\n$RefreshReg$(_c, \"MylistedItems\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","renderSoldItems","items","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","className","map","item","idx","Img","variant","src","image","Footer","utils","formatEther","totalPrice","price","MylistedItems","_ref","_s","marketplace","nft","account","loading","setLoading","listedItems","setListedItems","soldItems","setSoldItems","loadListedItems","itemCount","indx","i","seller","toLowercase","uri","tokenUri","tokenId","_c","$RefreshReg$"],"sources":["/home/gustavo/blockchain/Marketplace/src/frontend/components/MyListedItems.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nfunction renderSoldItems(items){\n    return (\n        <>\n            <h2>Sold</h2>\n            <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n                {items.map((item, idx) => {\n                    <Col key={idx} className='overflow-hidden'>\n                        <Card>\n                            <Card.Img variant=\"top\" src={item.image}/>\n                            <Card.Footer>\n                                For {ethers.utils.formatEther(item.totalPrice)} ETH - Received {ethers.utils.formatEther(item.price)}\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                })}\n            </Row>\n        </>\n    )\n}\n\nexport default function MylistedItems({marketplace, nft, account}) {\n    const [loading, setLoading] = useState(true);\n    const [listedItems, setListedItems] = useState([]);\n    const [soldItems, setSoldItems] = useState([]);\n\n    const loadListedItems = async() => {\n        const itemCount = marketplace.itemCount();\n        let listedItems = [];\n        let soldItems = [];\n        for (let indx = 1; indx <= itemCount; indx++){\n            const i = await marketplace.items(indx);\n            if(i.seller.toLowercase() === account){ //para saber si el nft ha sido vendido por nosotros (lo comparamos con el account)\n                const uri = await nft.tokenUri(i.tokenId);\n\n            }\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}