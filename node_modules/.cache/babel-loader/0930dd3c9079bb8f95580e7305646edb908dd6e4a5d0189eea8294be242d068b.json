{"ast":null,"code":"import _asyncToGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/home/gustavo/blockchain/Marketplace/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport { isBytes, isBlob, isReadableStream, isFileObject } from './utils.js';\nimport { parseMtime, parseMode } from 'ipfs-unixfs';\nexport function normaliseCandidateMultiple(_x, _x2) {\n  return _normaliseCandidateMultiple.apply(this, arguments);\n}\nfunction _normaliseCandidateMultiple() {\n  _normaliseCandidateMultiple = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, normaliseContent) {\n    var peekable, _yield$_awaitAsyncGen, value, done;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState)) {\n            _context.next = 2;\n            break;\n          }\n          throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n        case 2:\n          if (isReadableStream(input)) {\n            input = browserStreamToIt(input);\n          }\n          if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n            _context.next = 26;\n            break;\n          }\n          peekable = itPeekable(input);\n          _context.next = 7;\n          return _awaitAsyncGenerator(peekable.peek());\n        case 7:\n          _yield$_awaitAsyncGen = _context.sent;\n          value = _yield$_awaitAsyncGen.value;\n          done = _yield$_awaitAsyncGen.done;\n          if (!done) {\n            _context.next = 13;\n            break;\n          }\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator([]), _awaitAsyncGenerator), \"t0\", 12);\n        case 12:\n          return _context.abrupt(\"return\");\n        case 13:\n          peekable.push(value);\n          if (!Number.isInteger(value)) {\n            _context.next = 16;\n            break;\n          }\n          throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n        case 16:\n          if (!value._readableState) {\n            _context.next = 19;\n            break;\n          }\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(map(peekable, function (value) {\n            return toFileObject({\n              content: value\n            }, normaliseContent);\n          })), _awaitAsyncGenerator), \"t1\", 18);\n        case 18:\n          return _context.abrupt(\"return\");\n        case 19:\n          if (!isBytes(value)) {\n            _context.next = 23;\n            break;\n          }\n          _context.next = 22;\n          return toFileObject({\n            content: peekable\n          }, normaliseContent);\n        case 22:\n          return _context.abrupt(\"return\");\n        case 23:\n          if (!(isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value))) {\n            _context.next = 26;\n            break;\n          }\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(map(peekable, function (value) {\n            return toFileObject(value, normaliseContent);\n          })), _awaitAsyncGenerator), \"t2\", 25);\n        case 25:\n          return _context.abrupt(\"return\");\n        case 26:\n          if (!isFileObject(input)) {\n            _context.next = 28;\n            break;\n          }\n          throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n        case 28:\n          throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _normaliseCandidateMultiple.apply(this, arguments);\n}\nfunction toFileObject(_x3, _x4) {\n  return _toFileObject.apply(this, arguments);\n}\nfunction _toFileObject() {\n  _toFileObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, normaliseContent) {\n    var path, mode, mtime, content, file;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          path = input.path, mode = input.mode, mtime = input.mtime, content = input.content;\n          file = {\n            path: path || '',\n            mode: parseMode(mode),\n            mtime: parseMtime(mtime)\n          };\n          if (!content) {\n            _context2.next = 8;\n            break;\n          }\n          _context2.next = 5;\n          return normaliseContent(content);\n        case 5:\n          file.content = _context2.sent;\n          _context2.next = 12;\n          break;\n        case 8:\n          if (path) {\n            _context2.next = 12;\n            break;\n          }\n          _context2.next = 11;\n          return normaliseContent(input);\n        case 11:\n          file.content = _context2.sent;\n        case 12:\n          return _context2.abrupt(\"return\", file);\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _toFileObject.apply(this, arguments);\n}","map":{"version":3,"names":["errCode","browserStreamToIt","itPeekable","map","isBytes","isBlob","isReadableStream","isFileObject","parseMtime","parseMode","normaliseCandidateMultiple","_x","_x2","_normaliseCandidateMultiple","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","input","normaliseContent","peekable","_yield$_awaitAsyncGen","value","done","wrap","_callee$","_context","prev","next","String","_readableState","Error","Symbol","iterator","asyncIterator","_awaitAsyncGenerator","peek","sent","delegateYield","_asyncGeneratorDelegate","_asyncIterator","abrupt","push","Number","isInteger","toFileObject","content","stop","_x3","_x4","_toFileObject","_asyncToGenerator","_callee2","path","mode","mtime","file","_callee2$","_context2"],"sources":["/home/gustavo/blockchain/Marketplace/node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js"],"sourcesContent":["import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}